var ImageCropperDataShare = /** @class */ (function () {
    function ImageCropperDataShare() {
        this.share = {};
    }
    ImageCropperDataShare.prototype.setPressed = function (canvas) {
        this.pressed = canvas;
    };
    ImageCropperDataShare.prototype.setReleased = function (canvas) {
        if (canvas === this.pressed) {
            //  this.pressed = undefined;
        }
    };
    ImageCropperDataShare.prototype.setOver = function (canvas) {
        this.over = canvas;
    };
    ImageCropperDataShare.prototype.setStyle = function (canvas, style) {
        if (this.pressed !== undefined) {
            if (this.pressed === canvas) {
                // TODO: check this
                // angular.element(document.documentElement).css('cursor', style);
            }
        }
        else {
            if (canvas === this.over) {
                // TODO: check this
                // angular.element(document.documentElement).css('cursor', style);
            }
        }
    };
    return ImageCropperDataShare;
}());
export { ImageCropperDataShare };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1hZ2VDcm9wcGVyRGF0YVNoYXJlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWltZy1jcm9wcGVyLyIsInNvdXJjZXMiOlsibGliL2ltYWdlLWNyb3BwZXIvaW1hZ2VDcm9wcGVyRGF0YVNoYXJlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQUE7UUFDUyxVQUFLLEdBQVEsRUFBRSxDQUFDO0lBK0J6QixDQUFDO0lBM0JRLDBDQUFVLEdBQWpCLFVBQWtCLE1BQXlCO1FBQ3pDLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO0lBQ3hCLENBQUM7SUFFTSwyQ0FBVyxHQUFsQixVQUFtQixNQUF5QjtRQUMxQyxJQUFJLE1BQU0sS0FBSyxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQzNCLDZCQUE2QjtTQUM5QjtJQUNILENBQUM7SUFFTSx1Q0FBTyxHQUFkLFVBQWUsTUFBeUI7UUFDdEMsSUFBSSxDQUFDLElBQUksR0FBRyxNQUFNLENBQUM7SUFDckIsQ0FBQztJQUVNLHdDQUFRLEdBQWYsVUFBZ0IsTUFBeUIsRUFBRSxLQUFVO1FBQ25ELElBQUksSUFBSSxDQUFDLE9BQU8sS0FBSyxTQUFTLEVBQUU7WUFDOUIsSUFBSSxJQUFJLENBQUMsT0FBTyxLQUFLLE1BQU0sRUFBRTtnQkFDM0IsbUJBQW1CO2dCQUNuQixrRUFBa0U7YUFDbkU7U0FDRjthQUFNO1lBQ0wsSUFBSSxNQUFNLEtBQUssSUFBSSxDQUFDLElBQUksRUFBRTtnQkFDeEIsbUJBQW1CO2dCQUNuQixrRUFBa0U7YUFDbkU7U0FDRjtJQUNILENBQUM7SUFDSCw0QkFBQztBQUFELENBQUMsQUFoQ0QsSUFnQ0MiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgSW1hZ2VDcm9wcGVyRGF0YVNoYXJlIHtcclxuICBwdWJsaWMgc2hhcmU6IGFueSA9IHt9O1xyXG4gIHB1YmxpYyBwcmVzc2VkOiBIVE1MQ2FudmFzRWxlbWVudDtcclxuICBwdWJsaWMgb3ZlcjogSFRNTENhbnZhc0VsZW1lbnQ7XHJcblxyXG4gIHB1YmxpYyBzZXRQcmVzc2VkKGNhbnZhczogSFRNTENhbnZhc0VsZW1lbnQpOiB2b2lkIHtcclxuICAgIHRoaXMucHJlc3NlZCA9IGNhbnZhcztcclxuICB9XHJcblxyXG4gIHB1YmxpYyBzZXRSZWxlYXNlZChjYW52YXM6IEhUTUxDYW52YXNFbGVtZW50KTogdm9pZCB7XHJcbiAgICBpZiAoY2FudmFzID09PSB0aGlzLnByZXNzZWQpIHtcclxuICAgICAgLy8gIHRoaXMucHJlc3NlZCA9IHVuZGVmaW5lZDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHB1YmxpYyBzZXRPdmVyKGNhbnZhczogSFRNTENhbnZhc0VsZW1lbnQpOiB2b2lkIHtcclxuICAgIHRoaXMub3ZlciA9IGNhbnZhcztcclxuICB9XHJcblxyXG4gIHB1YmxpYyBzZXRTdHlsZShjYW52YXM6IEhUTUxDYW52YXNFbGVtZW50LCBzdHlsZTogYW55KTogdm9pZCB7XHJcbiAgICBpZiAodGhpcy5wcmVzc2VkICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgaWYgKHRoaXMucHJlc3NlZCA9PT0gY2FudmFzKSB7XHJcbiAgICAgICAgLy8gVE9ETzogY2hlY2sgdGhpc1xyXG4gICAgICAgIC8vIGFuZ3VsYXIuZWxlbWVudChkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpLmNzcygnY3Vyc29yJywgc3R5bGUpO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBpZiAoY2FudmFzID09PSB0aGlzLm92ZXIpIHtcclxuICAgICAgICAvLyBUT0RPOiBjaGVjayB0aGlzXHJcbiAgICAgICAgLy8gYW5ndWxhci5lbGVtZW50KGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCkuY3NzKCdjdXJzb3InLCBzdHlsZSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuIl19