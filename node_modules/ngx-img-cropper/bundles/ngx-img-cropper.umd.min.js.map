{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-img-cropper/lib/image-cropper/cropper-draw-settings.ts","ng://ngx-img-cropper/lib/image-cropper/cropper-settings.ts","ng://ngx-img-cropper/lib/image-cropper/exif.ts","ng://ngx-img-cropper/lib/image-cropper/model/point.ts","ng://ngx-img-cropper/lib/image-cropper/model/pointPool.ts","ng://ngx-img-cropper/lib/image-cropper/model/bounds.ts","ng://ngx-img-cropper/lib/image-cropper/model/handle.ts","ng://ngx-img-cropper/lib/image-cropper/model/cornerMarker.ts","ng://ngx-img-cropper/lib/image-cropper/model/cropTouch.ts","ng://ngx-img-cropper/lib/image-cropper/model/dragMarker.ts","ng://ngx-img-cropper/lib/image-cropper/model/imageCropperModel.ts","ng://ngx-img-cropper/lib/image-cropper/imageCropperDataShare.ts","ng://ngx-img-cropper/lib/image-cropper/imageCropper.ts","ng://ngx-img-cropper/lib/image-cropper/model/cropPosition.ts","ng://ngx-img-cropper/lib/image-cropper/image-cropper.component.ts","ng://ngx-img-cropper/lib/image-cropper/image-cropper.module.ts","ng://ngx-img-cropper/lib/image-cropper/image-cropper.service.ts","ng://ngx-img-cropper/lib/image-cropper/model/cropService.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","call","next","value","done","settings","lineDash","strokeWidth","strokeColor","fillColor","dragIconStrokeWidth","dragIconStrokeColor","dragIconFillColor","backgroundFillColor","CropperSettings","canvasWidth","canvasHeight","dynamicSizing","width","height","minWidth","minHeight","minWithRelativeToResolution","croppedWidth","croppedHeight","cropperDrawSettings","CropperDrawSettings","touchRadius","noFileInput","markerSizeMultiplier","centerTouchRadius","showCenterMarker","allowedFilesRegex","cropOnResize","preserveSize","compressRatio","_rounded","_keepAspect","assign","val","console","error","Fraction","_super","Number","Exif","debug","IptcFieldMap","120","110","25","55","80","85","122","105","116","15","Tags","36864","40960","40961","40962","40963","37121","37122","37500","37510","40964","36867","36868","37520","37521","37522","33434","33437","34850","34852","34855","34856","37377","37378","37379","37380","37381","37382","37383","37384","37385","37396","37386","41483","41484","41486","41487","41488","41492","41493","41495","41728","41729","41730","41985","41986","41987","41988","41989","41990","41991","41992","41993","41994","41995","41996","40965","42016","TiffTags","256","257","34665","34853","258","259","262","274","277","284","530","531","282","283","296","273","278","279","513","514","301","318","319","529","532","306","270","271","272","305","315","33432","GPSTags","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","16","17","18","19","20","21","22","23","24","26","27","28","29","30","StringValues","ExposureProgram","MeteringMode","255","LightSource","Flash","31","32","65","69","71","73","77","79","89","93","95","SensingMethod","SceneCaptureType","SceneType","CustomRendered","WhiteBalance","GainControl","Contrast","Saturation","Sharpness","SubjectDistanceRange","FileSource","Components","addEvent","element","event","handler","addEventListener","attachEvent","imageHasData","img","exifdata","base64ToArrayBuffer","base64","replace","binary","atob","len","buffer","ArrayBuffer","view","Uint8Array","charCodeAt","objectURLToBlob","url","callback","http","XMLHttpRequest","open","responseType","onload","status","response","send","getImageData","_this","handleBinaryFile","binFile","data","findEXIFinJPEG","iptcdata","findIPTCinJPEG","src","test","arrayBuffer","fileReader_1","FileReader","e","result","blob","readAsArrayBuffer","http_1","Error","Blob","File","fileReader","log","byteLength","file","dataView","DataView","getUint8","marker","offset","readEXIFData","getUint16","_dataView","_offset","nameHeaderLength","startOffset","sectionLength","readIPTCData","fieldValue","fieldName","dataSize","segmentType","segmentStartPos","getInt16","getStringFromDB","push","readTags","tiffStart","dirStart","strings","bigEnd","entryOffset","tag","entries","tags","readTagValue","vals","n","numerator","denominator","type","numValues","getUint32","valueOffset","getInt32","start","outstr","String","fromCharCode","exifData","gpsData","tiffOffset","firstIFDOffset","ExifIFDPointer","GPSInfoIFDPointer","checkImageType","Image","HTMLImageElement","getData","complete","getTag","getAllTags","a","pretty","strPretty","readFromBinaryFile","args","_i","Point","x","y","myNext","myPrev","PointPool","initialSize","prev","firstAvailable","borrow","borrowed","returnPoint","Bounds","left","right","top","bottom","getCentre","w","h","instance","Handle","radius","cropperSettings","over","drag","_position","setDrag","setOver","draw","ctx","touchInBounds","position","setPosition","CornerMarker","drawCornerBorder","sideLength","hDirection","vDirection","horizontalNeighbour","verticalNeighbour","beginPath","setLineDash","lineJoin","moveTo","lineTo","closePath","lineWidth","strokeStyle","stroke","drawCornerFill","rounded","offX","Math","round","sin","PI","abs","offY","fillStyle","fill","moveX","moveY","move","addHorizontalNeighbour","neighbour","addVerticalNeighbour","getHorizontalNeighbour","getVerticalNeighbour","id","DragMarker","iconPoints","scaledIconPoints","getDragIconPoints","drawIcon","arr","scale","maxLength","arrowWidth","arrowLength","connectorThroat","points","points_1","points_1_1","recalculatePosition","bounds","ImageCropperDataShare","share","setPressed","canvas","pressed","setReleased","setStyle","style","undefined","ImageCropper","imageCropperDataShare","keepAspect","crop","aspectRatio","currentDragTouches","isMouseDown","ratioW","ratioH","fileType","imageSet","pointPool","tl","tr","bl","br","markers","center","croppedImage","currentlyInteracting","cropWidth","cropHeight","sign","NaN","getMousePos","evt","rect","getBoundingClientRect","clientX","clientY","getTouchPos","touch","detectVerticalSquash","ih","document","createElement","getContext","drawImage","imageData","sy","ey","py","ratio","getDataUriMimeType","dataUri","dataUriSubstring","substring","mimeType","matches","RegExp","exec","prepare","cropCanvas","responsiveWidth","parentElement","clientWidth","updateSettings","resizeCanvas","setImage","srcImage","reset","getBounds","clearRect","sourceAspect","canvasAspect","drawImageIOSFix","fillRect","save","arc","clip","restore","max","strokeRect","dragCenter","maxXClamp","minXClamp","minYClamp","maxYClamp","enforceMinSize","xLength","yLength","xOver","yOver","dragCorner","anchorMarker","iX","iY","ax","ay","newHeight","newWidth","newY","newX","fold","getSide","min","handleRelease","newCropTouch","index","k","dragHandle","splice","handleMove","matched","dragTouch","clampedPositions","clampPosition","_b","_c","updateClampBounds","getCropBounds","isImageSet","cropPosition","getCropPositionFromMarkers","setCropPosition","updateCropPosition","cropBounds","getCropPositionFromBounds","cropPosition_1","cropPosition_1_1","vertSquashRatio","getCroppedImageHelper","tlPos","trPos","blPos","brPos","cropAspect","cX","cY","imageH","cropW","imageW","cropH","marginTop","marginLeft","actualH","actualW","actualX","actualY","scaledW","scaledH","fillWidth","fillHeight","getCroppedImage","offsetH","offsetW","resampleFn","toDataURL","minX","MAX_VALUE","minY","maxX","maxY","setBounds","currentBounds","onTouchMove","touches","preventDefault","touchPosition","cropTouch","CropTouch","identifier","distance","previousDistance","onMouseMove","mousePosition","getDragTouchForID","drawCursors","cursorDrawn","drawCornerCursor","didDraw","onTouchStart","onTouchEnd","changedTouches","sx","sw","sh","dx","dy","dw","dh","onMouseDown","onMouseUp","ImageCropperModel","CropPosition","toBounds","isInitialized","ImageCropperComponent","renderer","cropPositionChange","EventEmitter","exif","onCrop","dragUnsubscribers","paramIndex","decorator","ngAfterViewInit","cropcanvas","nativeElement","cropperClass","setAttribute","windowListener","resize","bind","window","toString","cropper","ngOnChanges","changes","isCropPositionChanged","image","emit","updateCropBounds","inputImage","currentValue","ngOnDestroy","removeDragListeners","removeEventListener","listen","forEach","unsubscribe","fileChangeListener","$event","files","name","image_1","loadEvent","readAsDataURL","offsetWidth","offsetHeight","newBounds","croppingClass","raf","requestAnimationFrame","cancelAnimationFrame","naturalHeight","naturalWidth","getOrientedImage","original","isCropPositionUpdateNeeded","cropBound","orientation","indexOf","cw","ch","cx","cy","deg","rotate","Renderer2","Inject","DOCUMENT","ViewChild","static","ElementRef","Input","Output","Component","selector","template","ImageCropperModule","NgModule","declarations","exports","imports","CommonModule","ImageCropperService","Injectable","providedIn","CropService","init"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export class CropperDrawSettings {\r\n  public lineDash = false;\r\n  public strokeWidth = 1;\r\n  public strokeColor = 'rgba(255,255,255,1)';\r\n  public fillColor = 'rgba(255,255,255,1)';\r\n  public dragIconStrokeWidth = 1;\r\n  public dragIconStrokeColor = 'rgba(0,0,0,1)';\r\n  public dragIconFillColor = 'rgba(255,255,255,1)';\r\n  public backgroundFillColor = 'rgba(0,0,0,0.6)';\r\n\r\n  constructor(settings?: any) {\r\n    if (typeof settings === 'object') {\r\n      this.lineDash = settings.lineDash || this.lineDash;\r\n      this.strokeWidth = settings.strokeWidth || this.strokeWidth;\r\n      this.fillColor = settings.fillColor || this.fillColor;\r\n      this.strokeColor = settings.strokeColor || this.strokeColor;\r\n      this.dragIconStrokeWidth =\r\n        settings.dragIconStrokeWidth || this.dragIconStrokeWidth;\r\n      this.dragIconStrokeColor =\r\n        settings.dragIconStrokeColor || this.dragIconStrokeColor;\r\n      this.dragIconFillColor =\r\n        settings.dragIconFillColor || this.dragIconFillColor;\r\n      this.backgroundFillColor =\r\n        settings.backgroundFillColor || this.backgroundFillColor;\r\n    }\r\n  }\r\n}\r\n","import { CropperDrawSettings } from './cropper-draw-settings';\r\n\r\nexport interface ICropperSettings {\r\n  canvasWidth?: number;\r\n  canvasHeight?: number;\r\n  dynamicSizing?: boolean;\r\n  cropperClass?: string;\r\n  croppingClass?: string;\r\n  width?: number;\r\n  height?: number;\r\n  minWidth?: number;\r\n  minHeight?: number;\r\n  minWithRelativeToResolution?: boolean;\r\n  croppedWidth?: number;\r\n  croppedHeight?: number;\r\n  cropperDrawSettings?: any;\r\n  touchRadius?: number;\r\n  noFileInput?: boolean;\r\n  fileType?: string;\r\n  resampleFn?: (c: HTMLCanvasElement) => void;\r\n  markerSizeMultiplier?: number;\r\n  centerTouchRadius?: number;\r\n  showCenterMarker?: boolean;\r\n  allowedFilesRegex?: RegExp;\r\n  cropOnResize?: boolean;\r\n  preserveSize?: boolean;\r\n  compressRatio?: number;\r\n  rounded?: boolean;\r\n  keepAspect?: boolean;\r\n}\r\n\r\nexport class CropperSettings implements ICropperSettings {\r\n  public canvasWidth = 300;\r\n  public canvasHeight = 300;\r\n\r\n  public dynamicSizing = false;\r\n  public cropperClass: string;\r\n  public croppingClass: string;\r\n\r\n  public width = 200;\r\n  public height = 200;\r\n\r\n  public minWidth = 50;\r\n  public minHeight = 50;\r\n  public minWithRelativeToResolution = true;\r\n\r\n  public croppedWidth = 100;\r\n  public croppedHeight = 100;\r\n\r\n  public cropperDrawSettings: CropperDrawSettings = new CropperDrawSettings();\r\n  public touchRadius = 20;\r\n  public noFileInput = false;\r\n\r\n  public fileType: string;\r\n\r\n  public resampleFn: (c: HTMLCanvasElement) => void;\r\n\r\n  public markerSizeMultiplier = 1;\r\n  public centerTouchRadius = 20;\r\n  public showCenterMarker = true;\r\n\r\n  public allowedFilesRegex: RegExp = /\\.(jpe?g|png|gif|bmp)$/i;\r\n  public cropOnResize = true;\r\n  public preserveSize = false;\r\n\r\n  public compressRatio = 1.0;\r\n\r\n  // tslint:disable-next-line:variable-name\r\n  private _rounded = false;\r\n  // tslint:disable-next-line:variable-name\r\n  private _keepAspect = true;\r\n\r\n  constructor(settings?: ICropperSettings) {\r\n    if (typeof settings === 'object') {\r\n      Object.assign(this, settings);\r\n    }\r\n  }\r\n\r\n  set rounded(val: boolean) {\r\n    this._rounded = val;\r\n    if (val) {\r\n      this._keepAspect = true;\r\n    }\r\n  }\r\n\r\n  get rounded(): boolean {\r\n    return this._rounded;\r\n  }\r\n\r\n  set keepAspect(val: boolean) {\r\n    this._keepAspect = val;\r\n    if (this._rounded === true && this._keepAspect === false) {\r\n      console.error(\r\n        'Cannot set keep aspect to false on rounded cropper. Ellipsis not supported'\r\n      );\r\n      this._keepAspect = true;\r\n    }\r\n  }\r\n\r\n  get keepAspect(): boolean {\r\n    return this._keepAspect;\r\n  }\r\n}\r\n","export class Fraction extends Number {\r\n  numerator: number;\r\n  denominator: number;\r\n}\r\n\r\nexport interface IImageExtended extends HTMLImageElement {\r\n  exifdata: any;\r\n  iptcdata: any;\r\n}\r\n\r\nexport class Exif {\r\n  public debug = false;\r\n\r\n  public IptcFieldMap: any = {\r\n    0x78: 'caption',\r\n    0x6e: 'credit',\r\n    0x19: 'keywords',\r\n    0x37: 'dateCreated',\r\n    0x50: 'byline',\r\n    0x55: 'bylineTitle',\r\n    0x7a: 'captionWriter',\r\n    0x69: 'headline',\r\n    0x74: 'copyright',\r\n    0x0f: 'category'\r\n  };\r\n\r\n  public Tags: any = {\r\n    // version tags\r\n    0x9000: 'ExifVersion', // EXIF version\r\n    0xa000: 'FlashpixVersion', // Flashpix format version\r\n\r\n    // colorspace tags\r\n    0xa001: 'ColorSpace', // Color space information tag\r\n\r\n    // image configuration\r\n    0xa002: 'PixelXDimension', // Valid width of meaningful image\r\n    0xa003: 'PixelYDimension', // Valid height of meaningful image\r\n    0x9101: 'ComponentsConfiguration', // Information about channels\r\n    0x9102: 'CompressedBitsPerPixel', // Compressed bits per pixel\r\n\r\n    // user information\r\n    0x927c: 'MakerNote', // Any desired information written by the manufacturer\r\n    0x9286: 'UserComment', // Comments by user\r\n\r\n    // related file\r\n    0xa004: 'RelatedSoundFile', // Name of related sound file\r\n\r\n    // date and time\r\n    0x9003: 'DateTimeOriginal', // Date and time when the original image was generated\r\n    0x9004: 'DateTimeDigitized', // Date and time when the image was stored digitally\r\n    0x9290: 'SubsecTime', // Fractions of seconds for DateTime\r\n    0x9291: 'SubsecTimeOriginal', // Fractions of seconds for DateTimeOriginal\r\n    0x9292: 'SubsecTimeDigitized', // Fractions of seconds for DateTimeDigitized\r\n\r\n    // picture-taking conditions\r\n    0x829a: 'ExposureTime', // Exposure time (in seconds)\r\n    0x829d: 'FNumber', // F number\r\n    0x8822: 'ExposureProgram', // Exposure program\r\n    0x8824: 'SpectralSensitivity', // Spectral sensitivity\r\n    0x8827: 'ISOSpeedRatings', // ISO speed rating\r\n    0x8828: 'OECF', // Optoelectric conversion factor\r\n    0x9201: 'ShutterSpeedValue', // Shutter speed\r\n    0x9202: 'ApertureValue', // Lens aperture\r\n    0x9203: 'BrightnessValue', // Value of brightness\r\n    0x9204: 'ExposureBias', // Exposure bias\r\n    0x9205: 'MaxApertureValue', // Smallest F number of lens\r\n    0x9206: 'SubjectDistance', // Distance to subject in meters\r\n    0x9207: 'MeteringMode', // Metering mode\r\n    0x9208: 'LightSource', // Kind of light source\r\n    0x9209: 'Flash', // Flash status\r\n    0x9214: 'SubjectArea', // Location and area of main subject\r\n    0x920a: 'FocalLength', // Focal length of the lens in mm\r\n    0xa20b: 'FlashEnergy', // Strobe energy in BCPS\r\n    0xa20c: 'SpatialFrequencyResponse', //\r\n    0xa20e: 'FocalPlaneXResolution', // Number of pixels in width direction per FocalPlaneResolutionUnit\r\n    0xa20f: 'FocalPlaneYResolution', // Number of pixels in height direction per FocalPlaneResolutionUnit\r\n    0xa210: 'FocalPlaneResolutionUnit', // Unit for measuring FocalPlaneXResolution and FocalPlaneYResolution\r\n    0xa214: 'SubjectLocation', // Location of subject in image\r\n    0xa215: 'ExposureIndex', // Exposure index selected on camera\r\n    0xa217: 'SensingMethod', // Image sensor type\r\n    0xa300: 'FileSource', // Image source (3 == DSC)\r\n    0xa301: 'SceneType', // Scene type (1 == directly photographed)\r\n    0xa302: 'CFAPattern', // Color filter array geometric pattern\r\n    0xa401: 'CustomRendered', // Special processing\r\n    0xa402: 'ExposureMode', // Exposure mode\r\n    0xa403: 'WhiteBalance', // 1 = auto white balance, 2 = manual\r\n    0xa404: 'DigitalZoomRation', // Digital zoom ratio\r\n    0xa405: 'FocalLengthIn35mmFilm', // Equivalent foacl length assuming 35mm film camera (in mm)\r\n    0xa406: 'SceneCaptureType', // Type of scene\r\n    0xa407: 'GainControl', // Degree of overall image gain adjustment\r\n    0xa408: 'Contrast', // Direction of contrast processing applied by camera\r\n    0xa409: 'Saturation', // Direction of saturation processing applied by camera\r\n    0xa40a: 'Sharpness', // Direction of sharpness processing applied by camera\r\n    0xa40b: 'DeviceSettingDescription', //\r\n    0xa40c: 'SubjectDistanceRange', // Distance to subject\r\n\r\n    // other tags\r\n    0xa005: 'InteroperabilityIFDPointer',\r\n    0xa420: 'ImageUniqueID' // Identifier assigned uniquely to each image\r\n  };\r\n\r\n  public TiffTags: any = {\r\n    0x0100: 'ImageWidth',\r\n    0x0101: 'ImageHeight',\r\n    0x8769: 'ExifIFDPointer',\r\n    0x8825: 'GPSInfoIFDPointer',\r\n    0xa005: 'InteroperabilityIFDPointer',\r\n    0x0102: 'BitsPerSample',\r\n    0x0103: 'Compression',\r\n    0x0106: 'PhotometricInterpretation',\r\n    0x0112: 'Orientation',\r\n    0x0115: 'SamplesPerPixel',\r\n    0x011c: 'PlanarConfiguration',\r\n    0x0212: 'YCbCrSubSampling',\r\n    0x0213: 'YCbCrPositioning',\r\n    0x011a: 'XResolution',\r\n    0x011b: 'YResolution',\r\n    0x0128: 'ResolutionUnit',\r\n    0x0111: 'StripOffsets',\r\n    0x0116: 'RowsPerStrip',\r\n    0x0117: 'StripByteCounts',\r\n    0x0201: 'JPEGInterchangeFormat',\r\n    0x0202: 'JPEGInterchangeFormatLength',\r\n    0x012d: 'TransferFunction',\r\n    0x013e: 'WhitePoint',\r\n    0x013f: 'PrimaryChromaticities',\r\n    0x0211: 'YCbCrCoefficients',\r\n    0x0214: 'ReferenceBlackWhite',\r\n    0x0132: 'DateTime',\r\n    0x010e: 'ImageDescription',\r\n    0x010f: 'Make',\r\n    0x0110: 'Model',\r\n    0x0131: 'Software',\r\n    0x013b: 'Artist',\r\n    0x8298: 'Copyright'\r\n  };\r\n\r\n  public GPSTags: any = {\r\n    0x0000: 'GPSVersionID',\r\n    0x0001: 'GPSLatitudeRef',\r\n    0x0002: 'GPSLatitude',\r\n    0x0003: 'GPSLongitudeRef',\r\n    0x0004: 'GPSLongitude',\r\n    0x0005: 'GPSAltitudeRef',\r\n    0x0006: 'GPSAltitude',\r\n    0x0007: 'GPSTimeStamp',\r\n    0x0008: 'GPSSatellites',\r\n    0x0009: 'GPSStatus',\r\n    0x000a: 'GPSMeasureMode',\r\n    0x000b: 'GPSDOP',\r\n    0x000c: 'GPSSpeedRef',\r\n    0x000d: 'GPSSpeed',\r\n    0x000e: 'GPSTrackRef',\r\n    0x000f: 'GPSTrack',\r\n    0x0010: 'GPSImgDirectionRef',\r\n    0x0011: 'GPSImgDirection',\r\n    0x0012: 'GPSMapDatum',\r\n    0x0013: 'GPSDestLatitudeRef',\r\n    0x0014: 'GPSDestLatitude',\r\n    0x0015: 'GPSDestLongitudeRef',\r\n    0x0016: 'GPSDestLongitude',\r\n    0x0017: 'GPSDestBearingRef',\r\n    0x0018: 'GPSDestBearing',\r\n    0x0019: 'GPSDestDistanceRef',\r\n    0x001a: 'GPSDestDistance',\r\n    0x001b: 'GPSProcessingMethod',\r\n    0x001c: 'GPSAreaInformation',\r\n    0x001d: 'GPSDateStamp',\r\n    0x001e: 'GPSDifferential'\r\n  };\r\n\r\n  public StringValues: any = {\r\n    ExposureProgram: {\r\n      0: 'Not defined',\r\n      1: 'Manual',\r\n      2: 'Normal program',\r\n      3: 'Aperture priority',\r\n      4: 'Shutter priority',\r\n      5: 'Creative program',\r\n      6: 'Action program',\r\n      7: 'Portrait mode',\r\n      8: 'Landscape mode'\r\n    },\r\n    MeteringMode: {\r\n      0: 'Unknown',\r\n      1: 'Average',\r\n      2: 'CenterWeightedAverage',\r\n      3: 'Spot',\r\n      4: 'MultiSpot',\r\n      5: 'Pattern',\r\n      6: 'Partial',\r\n      255: 'Other'\r\n    },\r\n    LightSource: {\r\n      0: 'Unknown',\r\n      1: 'Daylight',\r\n      2: 'Fluorescent',\r\n      3: 'Tungsten (incandescent light)',\r\n      4: 'Flash',\r\n      9: 'Fine weather',\r\n      10: 'Cloudy weather',\r\n      11: 'Shade',\r\n      12: 'Daylight fluorescent (D 5700 - 7100K)',\r\n      13: 'Day white fluorescent (N 4600 - 5400K)',\r\n      14: 'Cool white fluorescent (W 3900 - 4500K)',\r\n      15: 'White fluorescent (WW 3200 - 3700K)',\r\n      17: 'Standard light A',\r\n      18: 'Standard light B',\r\n      19: 'Standard light C',\r\n      20: 'D55',\r\n      21: 'D65',\r\n      22: 'D75',\r\n      23: 'D50',\r\n      24: 'ISO studio tungsten',\r\n      255: 'Other'\r\n    },\r\n    Flash: {\r\n      0x0000: 'Flash did not fire',\r\n      0x0001: 'Flash fired',\r\n      0x0005: 'Strobe return light not detected',\r\n      0x0007: 'Strobe return light detected',\r\n      0x0009: 'Flash fired, compulsory flash mode',\r\n      0x000d: 'Flash fired, compulsory flash mode, return light not detected',\r\n      0x000f: 'Flash fired, compulsory flash mode, return light detected',\r\n      0x0010: 'Flash did not fire, compulsory flash mode',\r\n      0x0018: 'Flash did not fire, auto mode',\r\n      0x0019: 'Flash fired, auto mode',\r\n      0x001d: 'Flash fired, auto mode, return light not detected',\r\n      0x001f: 'Flash fired, auto mode, return light detected',\r\n      0x0020: 'No flash function',\r\n      0x0041: 'Flash fired, red-eye reduction mode',\r\n      0x0045: 'Flash fired, red-eye reduction mode, return light not detected',\r\n      0x0047: 'Flash fired, red-eye reduction mode, return light detected',\r\n      0x0049: 'Flash fired, compulsory flash mode, red-eye reduction mode',\r\n      0x004d: 'Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected',\r\n      0x004f: 'Flash fired, compulsory flash mode, red-eye reduction mode, return light detected',\r\n      0x0059: 'Flash fired, auto mode, red-eye reduction mode',\r\n      0x005d: 'Flash fired, auto mode, return light not detected, red-eye reduction mode',\r\n      0x005f: 'Flash fired, auto mode, return light detected, red-eye reduction mode'\r\n    },\r\n    SensingMethod: {\r\n      1: 'Not defined',\r\n      2: 'One-chip color area sensor',\r\n      3: 'Two-chip color area sensor',\r\n      4: 'Three-chip color area sensor',\r\n      5: 'Color sequential area sensor',\r\n      7: 'Trilinear sensor',\r\n      8: 'Color sequential linear sensor'\r\n    },\r\n    SceneCaptureType: {\r\n      0: 'Standard',\r\n      1: 'Landscape',\r\n      2: 'Portrait',\r\n      3: 'Night scene'\r\n    },\r\n    SceneType: {\r\n      1: 'Directly photographed'\r\n    },\r\n    CustomRendered: {\r\n      0: 'Normal process',\r\n      1: 'Custom process'\r\n    },\r\n    WhiteBalance: {\r\n      0: 'Auto white balance',\r\n      1: 'Manual white balance'\r\n    },\r\n    GainControl: {\r\n      0: 'None',\r\n      1: 'Low gain up',\r\n      2: 'High gain up',\r\n      3: 'Low gain down',\r\n      4: 'High gain down'\r\n    },\r\n    Contrast: {\r\n      0: 'Normal',\r\n      1: 'Soft',\r\n      2: 'Hard'\r\n    },\r\n    Saturation: {\r\n      0: 'Normal',\r\n      1: 'Low saturation',\r\n      2: 'High saturation'\r\n    },\r\n    Sharpness: {\r\n      0: 'Normal',\r\n      1: 'Soft',\r\n      2: 'Hard'\r\n    },\r\n    SubjectDistanceRange: {\r\n      0: 'Unknown',\r\n      1: 'Macro',\r\n      2: 'Close view',\r\n      3: 'Distant view'\r\n    },\r\n    FileSource: {\r\n      3: 'DSC'\r\n    },\r\n\r\n    Components: {\r\n      0: '',\r\n      1: 'Y',\r\n      2: 'Cb',\r\n      3: 'Cr',\r\n      4: 'R',\r\n      5: 'G',\r\n      6: 'B'\r\n    }\r\n  };\r\n\r\n  public addEvent(\r\n    element: EventTarget | any,\r\n    event: string,\r\n    handler: EventListener\r\n  ) {\r\n    if (element.addEventListener) {\r\n      element.addEventListener(event, handler, false);\r\n    } else {\r\n      // Hello, IE!\r\n      if (element.attachEvent) {\r\n        element.attachEvent('on' + event, handler);\r\n      }\r\n    }\r\n  }\r\n\r\n  public imageHasData(img: IImageExtended) {\r\n    return !!img.exifdata;\r\n  }\r\n\r\n  public base64ToArrayBuffer(base64: string): ArrayBuffer {\r\n    base64 = base64.replace(/^data:([^;]+);base64,/gim, '');\r\n    const binary: string = atob(base64);\r\n    const len: number = binary.length;\r\n    const buffer: ArrayBuffer = new ArrayBuffer(len);\r\n    const view: Uint8Array = new Uint8Array(buffer);\r\n    for (let i = 0; i < len; i++) {\r\n      view[i] = binary.charCodeAt(i);\r\n    }\r\n    return buffer;\r\n  }\r\n\r\n  public objectURLToBlob(url: string, callback: (blob: Blob) => void) {\r\n    const http: XMLHttpRequest = new XMLHttpRequest();\r\n    http.open('GET', url, true);\r\n    http.responseType = 'blob';\r\n    http.onload = () => {\r\n      if (http.status === 200 || http.status === 0) {\r\n        callback(http.response);\r\n      }\r\n    };\r\n    http.send();\r\n  }\r\n\r\n  public getImageData(\r\n    img: IImageExtended | Blob | File,\r\n    callback: (img: IImageExtended) => void\r\n  ) {\r\n    const handleBinaryFile = (binFile: ArrayBuffer) => {\r\n      const data = this.findEXIFinJPEG(binFile);\r\n      const iptcdata = this.findIPTCinJPEG(binFile);\r\n      (img as IImageExtended).exifdata = data || {};\r\n      (img as IImageExtended).iptcdata = iptcdata || {};\r\n      if (callback) {\r\n        callback.call(img);\r\n      }\r\n    };\r\n\r\n    if ('src' in img && (img as IImageExtended).src) {\r\n      if (/^data:/i.test((img as IImageExtended).src)) {\r\n        // Data URI\r\n        const arrayBuffer = this.base64ToArrayBuffer(\r\n          (img as IImageExtended).src\r\n        );\r\n        handleBinaryFile(arrayBuffer);\r\n      } else {\r\n        if (/^blob:/i.test((img as IImageExtended).src)) {\r\n          // Object URL\r\n          const fileReader = new FileReader();\r\n          fileReader.onload = (e: any) => {\r\n            handleBinaryFile(e.target.result);\r\n          };\r\n          this.objectURLToBlob((img as IImageExtended).src, (blob: Blob) => {\r\n            fileReader.readAsArrayBuffer(blob);\r\n          });\r\n        } else {\r\n          const http = new XMLHttpRequest();\r\n          http.onload = () => {\r\n            if (http.status === 200 || http.status === 0) {\r\n              handleBinaryFile(http.response);\r\n            } else {\r\n              throw new Error('Could not load image');\r\n            }\r\n          };\r\n          http.open('GET', (img as IImageExtended).src, true);\r\n          http.responseType = 'arraybuffer';\r\n          http.send(null);\r\n        }\r\n      }\r\n    } else {\r\n      if (FileReader && (img instanceof Blob || img instanceof File)) {\r\n        const fileReader = new FileReader();\r\n        fileReader.onload = (e: any) => {\r\n          this.log('Got file of length ' + e.target.result.byteLength);\r\n          handleBinaryFile(e.target.result);\r\n        };\r\n\r\n        fileReader.readAsArrayBuffer(img);\r\n      }\r\n    }\r\n  }\r\n\r\n  public findEXIFinJPEG(file: ArrayBuffer) {\r\n    const dataView = new DataView(file);\r\n\r\n    this.log('Got file of length ' + file.byteLength);\r\n    if (dataView.getUint8(0) !== 0xff || dataView.getUint8(1) !== 0xd8) {\r\n      this.log('Not a valid JPEG');\r\n      return false; // not a valid jpeg\r\n    }\r\n\r\n    let offset = 2;\r\n    const length: number = file.byteLength;\r\n    let marker: number;\r\n\r\n    while (offset < length) {\r\n      if (dataView.getUint8(offset) !== 0xff) {\r\n        this.log(\r\n          'Not a valid marker at offset ' +\r\n            offset +\r\n            ', found: ' +\r\n            dataView.getUint8(offset)\r\n        );\r\n        return false; // not a valid marker, something is wrong\r\n      }\r\n\r\n      marker = dataView.getUint8(offset + 1);\r\n      this.log(marker);\r\n\r\n      // we could implement handling for other markers here,\r\n      // but we're only looking for 0xFFE1 for EXIF data\r\n      if (marker === 225) {\r\n        this.log('Found 0xFFE1 marker');\r\n        return this.readEXIFData(dataView, offset + 4); // , dataView.getUint16(offset + 2) - 2);\r\n        // offset += 2 + file.getShortAt(offset+2, true);\r\n      } else {\r\n        offset += 2 + dataView.getUint16(offset + 2);\r\n      }\r\n    }\r\n  }\r\n\r\n  public findIPTCinJPEG(file: ArrayBuffer) {\r\n    const dataView = new DataView(file);\r\n\r\n    this.log('Got file of length ' + file.byteLength);\r\n    if (dataView.getUint8(0) !== 0xff || dataView.getUint8(1) !== 0xd8) {\r\n      this.log('Not a valid JPEG');\r\n      return false; // not a valid jpeg\r\n    }\r\n\r\n    let offset = 2;\r\n    const length = file.byteLength;\r\n\r\n    // tslint:disable-next-line:variable-name\r\n    const isFieldSegmentStart = (_dataView: DataView, _offset: number) => {\r\n      return (\r\n        _dataView.getUint8(_offset) === 0x38 &&\r\n        _dataView.getUint8(_offset + 1) === 0x42 &&\r\n        _dataView.getUint8(_offset + 2) === 0x49 &&\r\n        _dataView.getUint8(_offset + 3) === 0x4d &&\r\n        _dataView.getUint8(_offset + 4) === 0x04 &&\r\n        _dataView.getUint8(_offset + 5) === 0x04\r\n      );\r\n    };\r\n\r\n    while (offset < length) {\r\n      if (isFieldSegmentStart(dataView, offset)) {\r\n        // Get the length of the name header (which is padded to an even number of bytes)\r\n        let nameHeaderLength = dataView.getUint8(offset + 7);\r\n        if (nameHeaderLength % 2 !== 0) {\r\n          nameHeaderLength += 1;\r\n        }\r\n        // Check for pre photoshop 6 format\r\n        if (nameHeaderLength === 0) {\r\n          // Always 4\r\n          nameHeaderLength = 4;\r\n        }\r\n\r\n        const startOffset = offset + 8 + nameHeaderLength;\r\n        const sectionLength = dataView.getUint16(offset + 6 + nameHeaderLength);\r\n\r\n        return this.readIPTCData(file, startOffset, sectionLength);\r\n      }\r\n\r\n      // Not the marker, continue searching\r\n      offset++;\r\n    }\r\n  }\r\n\r\n  public readIPTCData(\r\n    file: ArrayBuffer,\r\n    startOffset: number,\r\n    sectionLength: number\r\n  ) {\r\n    const dataView = new DataView(file);\r\n    const data: any = {};\r\n    let fieldValue: any;\r\n    let fieldName: string;\r\n    let dataSize: number;\r\n    let segmentType: any;\r\n    let segmentSize: number;\r\n    let segmentStartPos = startOffset;\r\n    while (segmentStartPos < startOffset + sectionLength) {\r\n      if (\r\n        dataView.getUint8(segmentStartPos) === 0x1c &&\r\n        dataView.getUint8(segmentStartPos + 1) === 0x02\r\n      ) {\r\n        segmentType = dataView.getUint8(segmentStartPos + 2);\r\n        if (segmentType in this.IptcFieldMap) {\r\n          dataSize = dataView.getInt16(segmentStartPos + 3);\r\n          segmentSize = dataSize + 5;\r\n          fieldName = this.IptcFieldMap[segmentType];\r\n          fieldValue = this.getStringFromDB(\r\n            dataView,\r\n            segmentStartPos + 5,\r\n            dataSize\r\n          );\r\n          // Check if we already stored a value with this name\r\n          if (data.hasOwnProperty(fieldName)) {\r\n            // Value already stored with this name, create multivalue field\r\n            if (data[fieldName] instanceof Array) {\r\n              data[fieldName].push(fieldValue);\r\n            } else {\r\n              data[fieldName] = [data[fieldName], fieldValue];\r\n            }\r\n          } else {\r\n            data[fieldName] = fieldValue;\r\n          }\r\n        }\r\n      }\r\n      segmentStartPos++;\r\n    }\r\n    return data;\r\n  }\r\n\r\n  public readTags(\r\n    file: DataView,\r\n    tiffStart: number,\r\n    dirStart: number,\r\n    strings: string[],\r\n    bigEnd: boolean\r\n  ): any {\r\n    const entries: number = file.getUint16(dirStart, !bigEnd);\r\n    const tags: any = {};\r\n    let entryOffset: number;\r\n    let tag: string;\r\n\r\n    for (let i = 0; i < entries; i++) {\r\n      entryOffset = dirStart + i * 12 + 2;\r\n      tag = strings[file.getUint16(entryOffset, !bigEnd)];\r\n      if (!tag) {\r\n        this.log('Unknown tag: ' + file.getUint16(entryOffset, !bigEnd));\r\n      }\r\n      tags[tag] = this.readTagValue(\r\n        file,\r\n        entryOffset,\r\n        tiffStart,\r\n        dirStart,\r\n        bigEnd\r\n      );\r\n    }\r\n    return tags;\r\n  }\r\n\r\n  public readTagValue(\r\n    file: any,\r\n    entryOffset: number,\r\n    tiffStart: number,\r\n    dirStart: number,\r\n    bigEnd: boolean\r\n  ): any {\r\n    const type: number = file.getUint16(entryOffset + 2, !bigEnd);\r\n    const numValues = file.getUint32(entryOffset + 4, !bigEnd);\r\n    const valueOffset = file.getUint32(entryOffset + 8, !bigEnd) + tiffStart;\r\n    let offset: number;\r\n    let vals: any[];\r\n    let val: any;\r\n    let n: number;\r\n    let numerator: any;\r\n    let denominator: any;\r\n\r\n    switch (type) {\r\n      case 1: // byte, 8-bit unsigned int\r\n      case 7: // undefined, 8-bit byte, value depending on field\r\n        if (numValues === 1) {\r\n          return file.getUint8(entryOffset + 8, !bigEnd);\r\n        } else {\r\n          offset = numValues > 4 ? valueOffset : entryOffset + 8;\r\n          vals = [];\r\n          for (n = 0; n < numValues; n++) {\r\n            vals[n] = file.getUint8(offset + n);\r\n          }\r\n          return vals;\r\n        }\r\n\r\n      case 2: // ascii, 8-bit byte\r\n        offset = numValues > 4 ? valueOffset : entryOffset + 8;\r\n        return this.getStringFromDB(file, offset, numValues - 1);\r\n\r\n      case 3: // short, 16 bit int\r\n        if (numValues === 1) {\r\n          return file.getUint16(entryOffset + 8, !bigEnd);\r\n        } else {\r\n          offset = numValues > 2 ? valueOffset : entryOffset + 8;\r\n          vals = [];\r\n          for (n = 0; n < numValues; n++) {\r\n            vals[n] = file.getUint16(offset + 2 * n, !bigEnd);\r\n          }\r\n          return vals;\r\n        }\r\n\r\n      case 4: // long, 32 bit int\r\n        if (numValues === 1) {\r\n          return file.getUint32(entryOffset + 8, !bigEnd);\r\n        } else {\r\n          vals = [];\r\n          for (n = 0; n < numValues; n++) {\r\n            vals[n] = file.getUint32(valueOffset + 4 * n, !bigEnd);\r\n          }\r\n          return vals;\r\n        }\r\n\r\n      case 5: // rational = two long values, first is numerator, second is denominator\r\n        if (numValues === 1) {\r\n          numerator = file.getUint32(valueOffset, !bigEnd);\r\n          denominator = file.getUint32(valueOffset + 4, !bigEnd);\r\n          val = new Fraction(numerator / denominator);\r\n          val.numerator = numerator;\r\n          val.denominator = denominator;\r\n          return val;\r\n        } else {\r\n          vals = [];\r\n          for (n = 0; n < numValues; n++) {\r\n            numerator = file.getUint32(valueOffset + 8 * n, !bigEnd);\r\n            denominator = file.getUint32(valueOffset + 4 + 8 * n, !bigEnd);\r\n            vals[n] = new Fraction(numerator / denominator);\r\n            vals[n].numerator = numerator;\r\n            vals[n].denominator = denominator;\r\n          }\r\n          return vals;\r\n        }\r\n\r\n      case 9: // slong, 32 bit signed int\r\n        if (numValues === 1) {\r\n          return file.getInt32(entryOffset + 8, !bigEnd);\r\n        } else {\r\n          vals = [];\r\n          for (n = 0; n < numValues; n++) {\r\n            vals[n] = file.getInt32(valueOffset + 4 * n, !bigEnd);\r\n          }\r\n          return vals;\r\n        }\r\n\r\n      case 10: // signed rational, two slongs, first is numerator, second is denominator\r\n        if (numValues === 1) {\r\n          return (\r\n            file.getInt32(valueOffset, !bigEnd) /\r\n            file.getInt32(valueOffset + 4, !bigEnd)\r\n          );\r\n        } else {\r\n          vals = [];\r\n          for (n = 0; n < numValues; n++) {\r\n            vals[n] =\r\n              file.getInt32(valueOffset + 8 * n, !bigEnd) /\r\n              file.getInt32(valueOffset + 4 + 8 * n, !bigEnd);\r\n          }\r\n          return vals;\r\n        }\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  public getStringFromDB(\r\n    buffer: DataView,\r\n    start: number,\r\n    length: number\r\n  ): string {\r\n    let outstr = '';\r\n    for (let n = start; n < start + length; n++) {\r\n      outstr += String.fromCharCode(buffer.getUint8(n));\r\n    }\r\n    return outstr;\r\n  }\r\n\r\n  public readEXIFData(file: DataView, start: number): any {\r\n    if (this.getStringFromDB(file, start, 4) !== 'Exif') {\r\n      this.log('Not valid EXIF data! ' + this.getStringFromDB(file, start, 4));\r\n\r\n      return false;\r\n    }\r\n\r\n    let bigEnd: boolean;\r\n    let tags: any;\r\n    let tag: string;\r\n    let exifData: any;\r\n    let gpsData: any;\r\n    const tiffOffset: number = start + 6;\r\n\r\n    // test for TIFF validity and endianness\r\n    if (file.getUint16(tiffOffset) === 0x4949) {\r\n      bigEnd = false;\r\n    } else {\r\n      if (file.getUint16(tiffOffset) === 0x4d4d) {\r\n        bigEnd = true;\r\n      } else {\r\n        this.log('Not valid TIFF data! (no 0x4949 or 0x4D4D)');\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if (file.getUint16(tiffOffset + 2, !bigEnd) !== 0x002a) {\r\n      this.log('Not valid TIFF data! (no 0x002A)');\r\n      return false;\r\n    }\r\n\r\n    const firstIFDOffset = file.getUint32(tiffOffset + 4, !bigEnd);\r\n\r\n    if (firstIFDOffset < 0x00000008) {\r\n      this.log(\r\n        'Not valid TIFF data! (First offset less than 8)',\r\n        file.getUint32(tiffOffset + 4, !bigEnd)\r\n      );\r\n      return false;\r\n    }\r\n\r\n    tags = this.readTags(\r\n      file,\r\n      tiffOffset,\r\n      tiffOffset + firstIFDOffset,\r\n      this.TiffTags,\r\n      bigEnd\r\n    );\r\n\r\n    if (tags.ExifIFDPointer) {\r\n      exifData = this.readTags(\r\n        file,\r\n        tiffOffset,\r\n        tiffOffset + tags.ExifIFDPointer,\r\n        this.Tags,\r\n        bigEnd\r\n      );\r\n      for (tag in exifData) {\r\n        if ({}.hasOwnProperty.call(exifData, tag)) {\r\n          switch (tag) {\r\n            case 'LightSource':\r\n            case 'Flash':\r\n            case 'MeteringMode':\r\n            case 'ExposureProgram':\r\n            case 'SensingMethod':\r\n            case 'SceneCaptureType':\r\n            case 'SceneType':\r\n            case 'CustomRendered':\r\n            case 'WhiteBalance':\r\n            case 'GainControl':\r\n            case 'Contrast':\r\n            case 'Saturation':\r\n            case 'Sharpness':\r\n            case 'SubjectDistanceRange':\r\n            case 'FileSource':\r\n              exifData[tag] = this.StringValues[tag][exifData[tag]];\r\n              break;\r\n            case 'ExifVersion':\r\n            case 'FlashpixVersion':\r\n              exifData[tag] = String.fromCharCode(\r\n                exifData[tag][0],\r\n                exifData[tag][1],\r\n                exifData[tag][2],\r\n                exifData[tag][3]\r\n              );\r\n              break;\r\n            case 'ComponentsConfiguration':\r\n              const compopents = 'Components';\r\n              exifData[tag] =\r\n                this.StringValues[compopents][exifData[tag][0]] +\r\n                this.StringValues[compopents][exifData[tag][1]] +\r\n                this.StringValues[compopents][exifData[tag][2]] +\r\n                this.StringValues[compopents][exifData[tag][3]];\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          tags[tag] = exifData[tag];\r\n        }\r\n      }\r\n    }\r\n\r\n    if (tags.GPSInfoIFDPointer) {\r\n      gpsData = this.readTags(\r\n        file,\r\n        tiffOffset,\r\n        tiffOffset + tags.GPSInfoIFDPointer,\r\n        this.GPSTags,\r\n        bigEnd\r\n      );\r\n      for (tag in gpsData) {\r\n        if ({}.hasOwnProperty.call(gpsData, tag)) {\r\n          switch (tag) {\r\n            case 'GPSVersionID':\r\n              gpsData[tag] =\r\n                gpsData[tag][0] +\r\n                '.' +\r\n                gpsData[tag][1] +\r\n                '.' +\r\n                gpsData[tag][2] +\r\n                '.' +\r\n                gpsData[tag][3];\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          tags[tag] = gpsData[tag];\r\n        }\r\n      }\r\n    }\r\n\r\n    return tags;\r\n  }\r\n\r\n  //   get rid of this silly issue\r\n  private checkImageType(img: any) {\r\n    return img instanceof Image || img instanceof HTMLImageElement;\r\n  }\r\n\r\n  public getData(img: IImageExtended | HTMLImageElement, callback: () => void) {\r\n    if (this.checkImageType(img) && !img.complete) {\r\n      return false;\r\n    }\r\n\r\n    if (!this.imageHasData(img as IImageExtended)) {\r\n      this.getImageData(img as IImageExtended, callback);\r\n    } else {\r\n      if (callback) {\r\n        callback.call(img);\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  public getTag(img: any, tag: string) {\r\n    if (!this.imageHasData(img)) {\r\n      return;\r\n    }\r\n    return img.exifdata[tag];\r\n  }\r\n\r\n  public getAllTags(img: any) {\r\n    if (!this.imageHasData(img)) {\r\n      return {};\r\n    }\r\n    let a: string;\r\n    const data: any = img.exifdata;\r\n    const tags: any = {};\r\n    for (a in data) {\r\n      if (data.hasOwnProperty(a)) {\r\n        tags[a] = data[a];\r\n      }\r\n    }\r\n    return tags;\r\n  }\r\n\r\n  public pretty(img: IImageExtended) {\r\n    if (!this.imageHasData(img)) {\r\n      return '';\r\n    }\r\n    let a: any;\r\n    const data: any = img.exifdata;\r\n    let strPretty = '';\r\n    for (a in data) {\r\n      if (data.hasOwnProperty(a)) {\r\n        if (typeof data[a] === 'object') {\r\n          if (data[a] instanceof Number) {\r\n            strPretty += `${a} : ${data[a]} [${data[a].numerator}/${\r\n              data[a].denominator\r\n            }]\\r\\n`;\r\n          } else {\r\n            strPretty += `${a} : [${data[a].length} values]\\r\\n`;\r\n          }\r\n        } else {\r\n          strPretty += `${a} : ${data[a]}\\r\\n`;\r\n        }\r\n      }\r\n    }\r\n    return strPretty;\r\n  }\r\n\r\n  public readFromBinaryFile(file: ArrayBuffer) {\r\n    return this.findEXIFinJPEG(file);\r\n  }\r\n\r\n  public log(...args: any[]) {\r\n    if (this.debug) {\r\n      console.log(args);\r\n    }\r\n  }\r\n}\r\n","export interface IPoint {\r\n  x: number;\r\n  y: number;\r\n  next: Point;\r\n  prev: Point;\r\n}\r\n\r\nexport class Point implements IPoint {\r\n  public x: number;\r\n  public y: number;\r\n\r\n  private myNext: Point;\r\n  private myPrev: Point;\r\n\r\n  constructor(x: number = 0, y: number = 0) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  public get next(): Point {\r\n    return this.myNext;\r\n  }\r\n\r\n  public set next(p: Point) {\r\n    this.myNext = p;\r\n  }\r\n\r\n  public get prev(): Point {\r\n    return this.myPrev;\r\n  }\r\n\r\n  public set prev(p: Point) {\r\n    this.myPrev = p;\r\n  }\r\n}\r\n","import { Point } from './point';\r\n\r\nexport class PointPool {\r\n  private borrowed: number;\r\n  private firstAvailable: Point;\r\n\r\n  constructor(initialSize: number = 1) {\r\n    let prev: Point = (this.firstAvailable = new Point());\r\n\r\n    for (let i = 1; i < initialSize; i++) {\r\n      const p = new Point();\r\n      prev.next = p;\r\n      prev = p;\r\n    }\r\n  }\r\n\r\n  get instance(): PointPool {\r\n    return this;\r\n  }\r\n\r\n  public borrow(x: number, y: number): Point {\r\n    if (this.firstAvailable == null) {\r\n      throw new Error('Pool exhausted');\r\n    }\r\n    this.borrowed++;\r\n    const p: Point = this.firstAvailable;\r\n    this.firstAvailable = p.next;\r\n    p.x = x;\r\n    p.y = y;\r\n    return p;\r\n  }\r\n\r\n  public returnPoint(p: Point) {\r\n    this.borrowed--;\r\n    p.x = 0;\r\n    p.y = 0;\r\n    p.next = this.firstAvailable;\r\n    this.firstAvailable = p;\r\n  }\r\n}\r\n","import { Point } from './point';\r\nimport { PointPool } from './pointPool';\r\n\r\nexport class Bounds {\r\n  public left: number;\r\n  public right: number;\r\n  public top: number;\r\n  public bottom: number;\r\n\r\n  constructor(x?: number, y?: number, width?: number, height?: number) {\r\n    if (x === void 0) {\r\n      x = 0;\r\n    }\r\n    if (y === void 0) {\r\n      y = 0;\r\n    }\r\n    if (width === void 0) {\r\n      width = 0;\r\n    }\r\n    if (height === void 0) {\r\n      height = 0;\r\n    }\r\n    this.left = x;\r\n    this.right = x + width;\r\n    this.top = y;\r\n    this.bottom = y + height;\r\n  }\r\n\r\n  public get width(): number {\r\n    return this.right - this.left;\r\n  }\r\n\r\n  public get height(): number {\r\n    return this.bottom - this.top;\r\n  }\r\n\r\n  public getCentre(): Point {\r\n    const w = this.width;\r\n    const h = this.height;\r\n    return new PointPool().instance.borrow(this.left + w / 2, this.top + h / 2);\r\n  }\r\n}\r\n","import { Point } from './point';\r\nimport { CropperSettings } from '../cropper-settings';\r\n\r\nexport interface IHandle {\r\n  over: boolean;\r\n  drag: boolean;\r\n  position: Point;\r\n  offset: Point;\r\n  radius: number;\r\n  cropperSettings: CropperSettings;\r\n  setPosition(x: number, y: number): void;\r\n  setDrag(value: boolean): void;\r\n  draw(ctx: CanvasRenderingContext2D): void;\r\n  setOver(over: boolean): void;\r\n  touchInBounds(x: number, y: number): boolean;\r\n}\r\n\r\nexport class Handle implements IHandle {\r\n  public over: boolean;\r\n  public drag: boolean;\r\n  // tslint:disable-next-line:variable-name\r\n  private _position: Point;\r\n  public offset: Point;\r\n  public radius: number;\r\n\r\n  public cropperSettings: CropperSettings = new CropperSettings();\r\n\r\n  constructor(x: number, y: number, radius: number, settings: CropperSettings) {\r\n    this.over = false;\r\n    this.drag = false;\r\n    this._position = new Point(x, y);\r\n    this.offset = new Point(0, 0);\r\n    this.radius = radius;\r\n    this.cropperSettings = settings;\r\n  }\r\n\r\n  public setDrag(value: boolean): void {\r\n    this.drag = value;\r\n    this.setOver(value);\r\n  }\r\n\r\n  public draw(ctx: CanvasRenderingContext2D) {\r\n    // this should't be empty\r\n  }\r\n\r\n  public setOver(over: boolean): void {\r\n    this.over = over;\r\n  }\r\n\r\n  public touchInBounds(x: number, y: number): boolean {\r\n    return (\r\n      x > this.position.x - this.radius + this.offset.x &&\r\n      x < this.position.x + this.radius + this.offset.x &&\r\n      y > this.position.y - this.radius + this.offset.y &&\r\n      y < this.position.y + this.radius + this.offset.y\r\n    );\r\n  }\r\n\r\n  public get position(): Point {\r\n    return this._position;\r\n  }\r\n\r\n  public setPosition(x: number, y: number) {\r\n    this._position.x = x;\r\n    this._position.y = y;\r\n  }\r\n}\r\n","import { Handle, IHandle } from './handle';\r\nimport { CropperSettings } from '../cropper-settings';\r\n\r\nexport interface ICornerMarker extends IHandle {\r\n  horizontalNeighbour: CornerMarker;\r\n  verticalNeighbour: CornerMarker;\r\n}\r\n\r\nexport class CornerMarker extends Handle implements ICornerMarker {\r\n  public horizontalNeighbour: CornerMarker;\r\n  public verticalNeighbour: CornerMarker;\r\n\r\n  constructor(\r\n    x: number,\r\n    y: number,\r\n    radius: number,\r\n    cropperSettings: CropperSettings\r\n  ) {\r\n    super(x, y, radius, cropperSettings);\r\n  }\r\n\r\n  public drawCornerBorder(ctx: CanvasRenderingContext2D): void {\r\n    let sideLength = 10;\r\n    if (this.over || this.drag) {\r\n      sideLength = 12;\r\n    }\r\n\r\n    let hDirection: number = this.cropperSettings.markerSizeMultiplier;\r\n    let vDirection: number = this.cropperSettings.markerSizeMultiplier;\r\n    if (this.horizontalNeighbour.position.x < this.position.x) {\r\n      hDirection = -this.cropperSettings.markerSizeMultiplier;\r\n    }\r\n    if (this.verticalNeighbour.position.y < this.position.y) {\r\n      vDirection = -this.cropperSettings.markerSizeMultiplier;\r\n    }\r\n\r\n    ctx.beginPath();\r\n    if (this.cropperSettings.cropperDrawSettings.lineDash) {\r\n      ctx.setLineDash([1, 3]);\r\n    }\r\n    ctx.lineJoin = 'miter';\r\n    ctx.moveTo(\r\n      this.position.x + this.offset.x,\r\n      this.position.y + this.offset.y\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x + sideLength * hDirection,\r\n      this.position.y + this.offset.y\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x + sideLength * hDirection,\r\n      this.position.y + this.offset.y + sideLength * vDirection\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x,\r\n      this.position.y + this.offset.y + sideLength * vDirection\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x,\r\n      this.position.y + this.offset.y\r\n    );\r\n    ctx.closePath();\r\n    ctx.lineWidth = this.cropperSettings.cropperDrawSettings.strokeWidth;\r\n    ctx.strokeStyle =\r\n      this.cropperSettings.cropperDrawSettings.strokeColor ||\r\n      'rgba(255,255,255,.7)';\r\n    ctx.stroke();\r\n  }\r\n\r\n  public drawCornerFill(ctx: CanvasRenderingContext2D): void {\r\n    let sideLength = 10;\r\n    if (this.over || this.drag) {\r\n      sideLength = 12;\r\n    }\r\n    let hDirection: number = this.cropperSettings.markerSizeMultiplier;\r\n    let vDirection: number = this.cropperSettings.markerSizeMultiplier;\r\n    if (this.horizontalNeighbour.position.x < this.position.x) {\r\n      hDirection = -this.cropperSettings.markerSizeMultiplier;\r\n    }\r\n    if (this.verticalNeighbour.position.y < this.position.y) {\r\n      vDirection = -this.cropperSettings.markerSizeMultiplier;\r\n    }\r\n\r\n    if (this.cropperSettings.rounded) {\r\n      const width: number =\r\n        this.position.x - this.horizontalNeighbour.position.x;\r\n      const height: number =\r\n        this.position.y - this.verticalNeighbour.position.y;\r\n\r\n      const offX: number =\r\n        Math.round(Math.sin(Math.PI / 2) * Math.abs(width / 2)) / 4;\r\n      const offY: number =\r\n        Math.round(Math.sin(Math.PI / 2) * Math.abs(height / 2)) / 4;\r\n\r\n      this.offset.x = hDirection > 0 ? offX : -offX;\r\n      this.offset.y = vDirection > 0 ? offY : -offY;\r\n    } else {\r\n      this.offset.x = 0;\r\n      this.offset.y = 0;\r\n    }\r\n\r\n    ctx.beginPath();\r\n    if (this.cropperSettings.cropperDrawSettings.lineDash) {\r\n      ctx.setLineDash([1, 3]);\r\n    }\r\n    ctx.moveTo(\r\n      this.position.x + this.offset.x,\r\n      this.position.y + this.offset.y\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x + sideLength * hDirection,\r\n      this.position.y + this.offset.y\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x + sideLength * hDirection,\r\n      this.position.y + this.offset.y + sideLength * vDirection\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x,\r\n      this.position.y + this.offset.y + sideLength * vDirection\r\n    );\r\n    ctx.lineTo(\r\n      this.position.x + this.offset.x,\r\n      this.position.y + this.offset.y\r\n    );\r\n    ctx.closePath();\r\n    ctx.fillStyle =\r\n      this.cropperSettings.cropperDrawSettings.fillColor ||\r\n      'rgba(255,255,255,.7)';\r\n    ctx.fill();\r\n  }\r\n\r\n  public moveX(x: number): void {\r\n    this.setPosition(x, this.position.y);\r\n  }\r\n\r\n  public moveY(y: number): void {\r\n    this.setPosition(this.position.x, y);\r\n  }\r\n\r\n  public move(x: number, y: number): void {\r\n    this.setPosition(x, y);\r\n    this.verticalNeighbour.moveX(x);\r\n    this.horizontalNeighbour.moveY(y);\r\n  }\r\n\r\n  public addHorizontalNeighbour(neighbour: CornerMarker): void {\r\n    this.horizontalNeighbour = neighbour;\r\n  }\r\n\r\n  public addVerticalNeighbour(neighbour: CornerMarker): void {\r\n    this.verticalNeighbour = neighbour;\r\n  }\r\n\r\n  public getHorizontalNeighbour(): CornerMarker {\r\n    return this.horizontalNeighbour;\r\n  }\r\n\r\n  public getVerticalNeighbour(): CornerMarker {\r\n    return this.verticalNeighbour;\r\n  }\r\n\r\n  public draw(ctx: CanvasRenderingContext2D): void {\r\n    this.drawCornerFill(ctx);\r\n    this.drawCornerBorder(ctx);\r\n  }\r\n}\r\n","import { IHandle } from './handle';\r\n\r\nexport class CropTouch {\r\n  public x: number;\r\n  public y: number;\r\n  public id: number;\r\n\r\n  public dragHandle: IHandle;\r\n\r\n  constructor(x: number = 0, y: number = 0, id: number = 0) {\r\n    this.id = id;\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n}\r\n","import { Handle } from './handle';\r\nimport { PointPool } from './pointPool';\r\nimport { Point } from './point';\r\nimport { CropperSettings } from '../cropper-settings';\r\nimport { Bounds } from './bounds';\r\n\r\nexport class DragMarker extends Handle {\r\n  private iconPoints: Array<Point>;\r\n  private scaledIconPoints: Array<Point>;\r\n\r\n  constructor(\r\n    x: number,\r\n    y: number,\r\n    radius: number,\r\n    cropperSettings: CropperSettings\r\n  ) {\r\n    super(x, y, radius, cropperSettings);\r\n    this.iconPoints = [];\r\n    this.scaledIconPoints = [];\r\n    this.getDragIconPoints(this.iconPoints, 1);\r\n    this.getDragIconPoints(this.scaledIconPoints, 1.2);\r\n  }\r\n\r\n  public draw(ctx: CanvasRenderingContext2D) {\r\n    if (this.over || this.drag) {\r\n      this.drawIcon(ctx, this.scaledIconPoints);\r\n    } else {\r\n      this.drawIcon(ctx, this.iconPoints);\r\n    }\r\n  }\r\n\r\n  public getDragIconPoints(arr: Array<any>, scale: number) {\r\n    const maxLength = 17 * scale;\r\n    const arrowWidth = 14 * scale;\r\n    const arrowLength = 8 * scale;\r\n    const connectorThroat = 4 * scale;\r\n\r\n    arr.push(\r\n      new PointPool().instance.borrow(\r\n        -connectorThroat / 2,\r\n        maxLength - arrowLength\r\n      )\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(-arrowWidth / 2, maxLength - arrowLength)\r\n    );\r\n    arr.push(new PointPool().instance.borrow(0, maxLength));\r\n    arr.push(\r\n      new PointPool().instance.borrow(arrowWidth / 2, maxLength - arrowLength)\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(\r\n        connectorThroat / 2,\r\n        maxLength - arrowLength\r\n      )\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(connectorThroat / 2, connectorThroat / 2)\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(\r\n        maxLength - arrowLength,\r\n        connectorThroat / 2\r\n      )\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(maxLength - arrowLength, arrowWidth / 2)\r\n    );\r\n    arr.push(new PointPool().instance.borrow(maxLength, 0));\r\n    arr.push(\r\n      new PointPool().instance.borrow(maxLength - arrowLength, -arrowWidth / 2)\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(\r\n        maxLength - arrowLength,\r\n        -connectorThroat / 2\r\n      )\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(connectorThroat / 2, -connectorThroat / 2)\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(\r\n        connectorThroat / 2,\r\n        -maxLength + arrowLength\r\n      )\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(arrowWidth / 2, -maxLength + arrowLength)\r\n    );\r\n    arr.push(new PointPool().instance.borrow(0, -maxLength));\r\n    arr.push(\r\n      new PointPool().instance.borrow(-arrowWidth / 2, -maxLength + arrowLength)\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(\r\n        -connectorThroat / 2,\r\n        -maxLength + arrowLength\r\n      )\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(\r\n        -connectorThroat / 2,\r\n        -connectorThroat / 2\r\n      )\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(\r\n        -maxLength + arrowLength,\r\n        -connectorThroat / 2\r\n      )\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(-maxLength + arrowLength, -arrowWidth / 2)\r\n    );\r\n    arr.push(new PointPool().instance.borrow(-maxLength, 0));\r\n    arr.push(\r\n      new PointPool().instance.borrow(-maxLength + arrowLength, arrowWidth / 2)\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(\r\n        -maxLength + arrowLength,\r\n        connectorThroat / 2\r\n      )\r\n    );\r\n    arr.push(\r\n      new PointPool().instance.borrow(-connectorThroat / 2, connectorThroat / 2)\r\n    );\r\n  }\r\n\r\n  public drawIcon(ctx: CanvasRenderingContext2D, points: Array<Point>) {\r\n    if (this.cropperSettings.showCenterMarker) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(points[0].x + this.position.x, points[0].y + this.position.y);\r\n      for (const p of points) {\r\n        ctx.lineTo(p.x + this.position.x, p.y + this.position.y);\r\n      }\r\n      ctx.closePath();\r\n      ctx.fillStyle = this.cropperSettings.cropperDrawSettings.dragIconFillColor;\r\n      ctx.fill();\r\n      ctx.lineWidth = this.cropperSettings.cropperDrawSettings.dragIconStrokeWidth;\r\n      ctx.strokeStyle = this.cropperSettings.cropperDrawSettings.dragIconStrokeColor;\r\n      ctx.stroke();\r\n    }\r\n  }\r\n\r\n  public recalculatePosition(bounds: Bounds) {\r\n    const c = bounds.getCentre();\r\n    this.setPosition(c.x, c.y);\r\n    new PointPool().instance.returnPoint(c);\r\n  }\r\n}\r\n","import { PointPool } from './pointPool';\r\nimport { CornerMarker } from './cornerMarker';\r\nimport { DragMarker } from './dragMarker';\r\nimport { CropTouch } from './cropTouch';\r\n\r\nexport class ImageCropperModel {\r\n  public isMouseDown: boolean;\r\n  protected canvas: HTMLCanvasElement;\r\n  protected x: number;\r\n  protected y: number;\r\n  protected width: number;\r\n  protected height: number;\r\n  protected canvasWidth: number;\r\n  protected canvasHeight: number;\r\n  protected keepAspect: boolean;\r\n  protected touchRadius: number;\r\n  protected currentDragTouches: Array<CropTouch>;\r\n  protected ratioW: number;\r\n  protected ratioH: number;\r\n  protected fileType: string;\r\n  protected imageSet: boolean;\r\n  protected pointPool: PointPool;\r\n  protected buffer: HTMLCanvasElement;\r\n  protected cropCanvas: HTMLCanvasElement;\r\n  protected tl: CornerMarker;\r\n  protected tr: CornerMarker;\r\n  protected bl: CornerMarker;\r\n  protected br: CornerMarker;\r\n  protected markers: Array<CornerMarker>;\r\n  protected center: DragMarker;\r\n  protected ctx: CanvasRenderingContext2D;\r\n  protected aspectRatio: number;\r\n  protected currentlyInteracting: boolean;\r\n  protected srcImage: HTMLImageElement;\r\n  protected vertSquashRatio: number;\r\n  protected minXClamp: number;\r\n  protected minYClamp: number;\r\n  protected maxXClamp: number;\r\n  protected maxYClamp: number;\r\n  protected minHeight: number;\r\n  protected minWidth: number;\r\n  protected cropWidth: number;\r\n  protected cropHeight: number;\r\n  protected croppedImage: HTMLImageElement;\r\n}\r\n","export class ImageCropperDataShare {\r\n  public share: any = {};\r\n  public pressed: HTMLCanvasElement;\r\n  public over: HTMLCanvasElement;\r\n\r\n  public setPressed(canvas: HTMLCanvasElement): void {\r\n    this.pressed = canvas;\r\n  }\r\n\r\n  public setReleased(canvas: HTMLCanvasElement): void {\r\n    if (canvas === this.pressed) {\r\n      //  this.pressed = undefined;\r\n    }\r\n  }\r\n\r\n  public setOver(canvas: HTMLCanvasElement): void {\r\n    this.over = canvas;\r\n  }\r\n\r\n  public setStyle(canvas: HTMLCanvasElement, style: any): void {\r\n    if (this.pressed !== undefined) {\r\n      if (this.pressed === canvas) {\r\n        // TODO: check this\r\n        // angular.element(document.documentElement).css('cursor', style);\r\n      }\r\n    } else {\r\n      if (canvas === this.over) {\r\n        // TODO: check this\r\n        // angular.element(document.documentElement).css('cursor', style);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Bounds } from './model/bounds';\r\nimport { CornerMarker } from './model/cornerMarker';\r\nimport { CropTouch } from './model/cropTouch';\r\nimport { CropperSettings } from './cropper-settings';\r\nimport { DragMarker } from './model/dragMarker';\r\nimport { ImageCropperModel } from './model/imageCropperModel';\r\nimport { ImageCropperDataShare } from './imageCropperDataShare';\r\nimport { PointPool } from './model/pointPool';\r\nimport { Point } from './model/point';\r\nimport { ICornerMarker } from './model/cornerMarker';\r\n\r\nexport class ImageCropper extends ImageCropperModel {\r\n  private crop: ImageCropper;\r\n  private cropperSettings: CropperSettings;\r\n  private previousDistance: number;\r\n  private imageCropperDataShare: ImageCropperDataShare;\r\n\r\n  constructor(cropperSettings: CropperSettings) {\r\n    super();\r\n    this.imageCropperDataShare = new ImageCropperDataShare();\r\n    const x = 0;\r\n    const y = 0;\r\n    const width: number = cropperSettings.width;\r\n    const height: number = cropperSettings.height;\r\n    const keepAspect: boolean = cropperSettings.keepAspect;\r\n    const touchRadius: number = cropperSettings.touchRadius;\r\n    const centerTouchRadius: number = cropperSettings.centerTouchRadius;\r\n    const minWidth: number = cropperSettings.minWidth;\r\n    const minHeight: number = cropperSettings.minHeight;\r\n    const croppedWidth: number = cropperSettings.croppedWidth;\r\n    const croppedHeight: number = cropperSettings.croppedHeight;\r\n\r\n    this.cropperSettings = cropperSettings;\r\n\r\n    this.crop = this;\r\n    this.x = x;\r\n    this.y = y;\r\n\r\n    this.canvasHeight = cropperSettings.canvasHeight;\r\n    this.canvasWidth = cropperSettings.canvasWidth;\r\n\r\n    this.width = width;\r\n    if (width === void 0) {\r\n      this.width = 100;\r\n    }\r\n    this.height = height;\r\n    if (height === void 0) {\r\n      this.height = 50;\r\n    }\r\n    this.keepAspect = keepAspect;\r\n    if (keepAspect === void 0) {\r\n      this.keepAspect = true;\r\n    }\r\n    this.touchRadius = touchRadius;\r\n    if (touchRadius === void 0) {\r\n      this.touchRadius = 20;\r\n    }\r\n    this.minWidth = minWidth;\r\n    this.minHeight = minHeight;\r\n    this.aspectRatio = 0;\r\n    this.currentDragTouches = [];\r\n    this.isMouseDown = false;\r\n    this.ratioW = 1;\r\n    this.ratioH = 1;\r\n    this.fileType = cropperSettings.fileType;\r\n    this.imageSet = false;\r\n    this.pointPool = new PointPool(200);\r\n\r\n    this.tl = new CornerMarker(x, y, touchRadius, this.cropperSettings);\r\n    this.tr = new CornerMarker(x + width, y, touchRadius, this.cropperSettings);\r\n    this.bl = new CornerMarker(\r\n      x,\r\n      y + height,\r\n      touchRadius,\r\n      this.cropperSettings\r\n    );\r\n    this.br = new CornerMarker(\r\n      x + width,\r\n      y + height,\r\n      touchRadius,\r\n      this.cropperSettings\r\n    );\r\n\r\n    this.tl.addHorizontalNeighbour(this.tr);\r\n    this.tl.addVerticalNeighbour(this.bl);\r\n    this.tr.addHorizontalNeighbour(this.tl);\r\n    this.tr.addVerticalNeighbour(this.br);\r\n    this.bl.addHorizontalNeighbour(this.br);\r\n    this.bl.addVerticalNeighbour(this.tl);\r\n    this.br.addHorizontalNeighbour(this.bl);\r\n    this.br.addVerticalNeighbour(this.tr);\r\n    this.markers = [this.tl, this.tr, this.bl, this.br];\r\n\r\n    this.center = new DragMarker(\r\n      x + width / 2,\r\n      y + height / 2,\r\n      centerTouchRadius,\r\n      this.cropperSettings\r\n    );\r\n    this.aspectRatio = height / width;\r\n    this.croppedImage = new Image();\r\n    this.currentlyInteracting = false;\r\n    this.cropWidth = croppedWidth;\r\n    this.cropHeight = croppedHeight;\r\n  }\r\n\r\n  private sign(x: number): number {\r\n    if (+x === x) {\r\n      return x === 0 ? x : x > 0 ? 1 : -1;\r\n    }\r\n    return NaN;\r\n  }\r\n\r\n  private getMousePos(canvas: HTMLCanvasElement, evt: MouseEvent): Point {\r\n    const rect = canvas.getBoundingClientRect();\r\n    return new PointPool().instance.borrow(\r\n      evt.clientX - rect.left,\r\n      evt.clientY - rect.top\r\n    );\r\n  }\r\n\r\n  private getTouchPos(canvas: HTMLCanvasElement, touch: Touch): Point {\r\n    const rect = canvas.getBoundingClientRect();\r\n    return new PointPool().instance.borrow(\r\n      touch.clientX - rect.left,\r\n      touch.clientY - rect.top\r\n    );\r\n  }\r\n\r\n  private detectVerticalSquash(\r\n    img: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement\r\n  ) {\r\n    const ih = img.height;\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = 1;\r\n    canvas.height = ih;\r\n    const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n    ctx.drawImage(img, 0, 0);\r\n    const imageData: any = ctx.getImageData(0, 0, 1, ih);\r\n    if (imageData) {\r\n      const data = imageData.data;\r\n      // search image edge pixel position in case it is squashed vertically.\r\n      let sy = 0;\r\n      let ey = ih;\r\n      let py = ih;\r\n      while (py > sy) {\r\n        const alpha = data[(py - 1) * 4 + 3];\r\n        if (alpha === 0) {\r\n          ey = py;\r\n        } else {\r\n          sy = py;\r\n        }\r\n        // tslint:disable-next-line:no-bitwise\r\n        py = (ey + sy) >> 1;\r\n      }\r\n      const ratio = py / ih;\r\n      return ratio === 0 ? 1 : ratio;\r\n    } else {\r\n      return 1;\r\n    }\r\n  }\r\n\r\n  private getDataUriMimeType(dataUri: string) {\r\n    // Get a substring because the regex does not perform well on very large strings.\r\n    // Cater for optional charset. Length 50 shoould be enough.\r\n    const dataUriSubstring = dataUri.substring(0, 50);\r\n    let mimeType = 'image/png';\r\n    // data-uri scheme\r\n    // data:[<media type>][;charset=<character set>][;base64],<data>\r\n    const regEx = RegExp(\r\n      /^(data:)([\\w\\/\\+]+);(charset=[\\w-]+|base64).*,(.*)/gi\r\n    );\r\n    const matches = regEx.exec(dataUriSubstring);\r\n    if (matches && matches[2]) {\r\n      mimeType = matches[2];\r\n      if (mimeType === 'image/jpg') {\r\n        mimeType = 'image/jpeg';\r\n      }\r\n    }\r\n    return mimeType;\r\n  }\r\n\r\n  public prepare(canvas: HTMLCanvasElement) {\r\n    this.buffer = document.createElement('canvas');\r\n    this.cropCanvas = document.createElement('canvas');\r\n\r\n    // todo get more reliable parent width value.\r\n    const responsiveWidth: number = canvas.parentElement\r\n      ? canvas.parentElement.clientWidth\r\n      : 0;\r\n    if (responsiveWidth > 0 && this.cropperSettings.dynamicSizing) {\r\n      this.cropCanvas.width = responsiveWidth;\r\n      this.buffer.width = responsiveWidth;\r\n      canvas.width = responsiveWidth;\r\n    } else {\r\n      this.cropCanvas.width = this.cropWidth;\r\n      this.buffer.width = canvas.width;\r\n    }\r\n\r\n    this.cropCanvas.height = this.cropHeight;\r\n    this.buffer.height = canvas.height;\r\n    this.canvas = canvas;\r\n    this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n    this.draw(this.ctx);\r\n  }\r\n\r\n  public updateSettings(cropperSettings: CropperSettings) {\r\n    this.cropperSettings = cropperSettings;\r\n  }\r\n\r\n  public resizeCanvas(\r\n    width: number,\r\n    height: number,\r\n    setImage: boolean = false\r\n  ): void {\r\n    this.canvas.width = this.cropCanvas.width = this.width = this.canvasWidth = this.buffer.width = width;\r\n    this.canvas.height = this.cropCanvas.height = this.height = this.canvasHeight = this.buffer.height = height;\r\n    if (setImage) {\r\n      this.setImage(this.srcImage);\r\n    }\r\n  }\r\n\r\n  public reset(): void {\r\n    this.setImage(undefined);\r\n  }\r\n\r\n  public draw(ctx: CanvasRenderingContext2D): void {\r\n    const bounds: Bounds = this.getBounds();\r\n    if (this.srcImage) {\r\n      ctx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\r\n      const sourceAspect: number = this.srcImage.height / this.srcImage.width;\r\n      const canvasAspect: number = this.canvasHeight / this.canvasWidth;\r\n      let w: number = this.canvasWidth;\r\n      let h: number = this.canvasHeight;\r\n      if (canvasAspect > sourceAspect) {\r\n        w = this.canvasWidth;\r\n        h = this.canvasWidth * sourceAspect;\r\n      } else {\r\n        h = this.canvasHeight;\r\n        w = this.canvasHeight / sourceAspect;\r\n      }\r\n      this.ratioW = w / this.srcImage.width;\r\n      this.ratioH = h / this.srcImage.height;\r\n      if (canvasAspect < sourceAspect) {\r\n        this.drawImageIOSFix(\r\n          ctx,\r\n          this.srcImage,\r\n          0,\r\n          0,\r\n          this.srcImage.width,\r\n          this.srcImage.height,\r\n          this.buffer.width / 2 - w / 2,\r\n          0,\r\n          w,\r\n          h\r\n        );\r\n      } else {\r\n        this.drawImageIOSFix(\r\n          ctx,\r\n          this.srcImage,\r\n          0,\r\n          0,\r\n          this.srcImage.width,\r\n          this.srcImage.height,\r\n          0,\r\n          this.buffer.height / 2 - h / 2,\r\n          w,\r\n          h\r\n        );\r\n      }\r\n      (this.buffer.getContext('2d') as CanvasRenderingContext2D).drawImage(\r\n        this.canvas,\r\n        0,\r\n        0,\r\n        this.canvasWidth,\r\n        this.canvasHeight\r\n      );\r\n\r\n      ctx.lineWidth = this.cropperSettings.cropperDrawSettings.strokeWidth;\r\n      ctx.strokeStyle = this.cropperSettings.cropperDrawSettings.strokeColor;\r\n\r\n      ctx.fillStyle = this.cropperSettings.cropperDrawSettings.backgroundFillColor;\r\n      if (!this.cropperSettings.rounded) {\r\n        ctx.fillRect(0, 0, this.canvasWidth, this.canvasHeight);\r\n        ctx.drawImage(\r\n          this.buffer,\r\n          bounds.left,\r\n          bounds.top,\r\n          Math.max(bounds.width, 1),\r\n          Math.max(bounds.height, 1),\r\n          bounds.left,\r\n          bounds.top,\r\n          bounds.width,\r\n          bounds.height\r\n        );\r\n        ctx.strokeRect(bounds.left, bounds.top, bounds.width, bounds.height);\r\n      } else {\r\n        ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        ctx.arc(\r\n          bounds.left + bounds.width / 2,\r\n          bounds.top + bounds.height / 2,\r\n          bounds.width / 2,\r\n          0,\r\n          2 * Math.PI\r\n        );\r\n        ctx.stroke();\r\n        ctx.clip();\r\n        if (canvasAspect < sourceAspect) {\r\n          this.drawImageIOSFix(\r\n            ctx,\r\n            this.srcImage,\r\n            0,\r\n            0,\r\n            this.srcImage.width,\r\n            this.srcImage.height,\r\n            this.buffer.width / 2 - w / 2,\r\n            0,\r\n            w,\r\n            h\r\n          );\r\n        } else {\r\n          this.drawImageIOSFix(\r\n            ctx,\r\n            this.srcImage,\r\n            0,\r\n            0,\r\n            this.srcImage.width,\r\n            this.srcImage.height,\r\n            0,\r\n            this.buffer.height / 2 - h / 2,\r\n            w,\r\n            h\r\n          );\r\n        }\r\n        ctx.restore();\r\n      }\r\n\r\n      let marker: CornerMarker;\r\n\r\n      // tslint:disable-next-line:prefer-for-of\r\n      for (let i = 0; i < this.markers.length; i++) {\r\n        marker = this.markers[i];\r\n        marker.draw(ctx);\r\n      }\r\n      this.center.draw(ctx);\r\n    } else {\r\n      ctx.fillStyle = 'rgba(192,192,192,1)';\r\n      ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n    }\r\n  }\r\n\r\n  public dragCenter(x: number, y: number, marker: DragMarker) {\r\n    const bounds = this.getBounds();\r\n    const left = x - bounds.width / 2;\r\n    const right = x + bounds.width / 2;\r\n    const top = y - bounds.height / 2;\r\n    const bottom = y + bounds.height / 2;\r\n    if (right >= this.maxXClamp) {\r\n      x = this.maxXClamp - bounds.width / 2;\r\n    }\r\n    if (left <= this.minXClamp) {\r\n      x = bounds.width / 2 + this.minXClamp;\r\n    }\r\n    if (top < this.minYClamp) {\r\n      y = bounds.height / 2 + this.minYClamp;\r\n    }\r\n    if (bottom >= this.maxYClamp) {\r\n      y = this.maxYClamp - bounds.height / 2;\r\n    }\r\n    this.tl.moveX(x - bounds.width / 2);\r\n    this.tl.moveY(y - bounds.height / 2);\r\n    this.tr.moveX(x + bounds.width / 2);\r\n    this.tr.moveY(y - bounds.height / 2);\r\n    this.bl.moveX(x - bounds.width / 2);\r\n    this.bl.moveY(y + bounds.height / 2);\r\n    this.br.moveX(x + bounds.width / 2);\r\n    this.br.moveY(y + bounds.height / 2);\r\n    marker.setPosition(x, y);\r\n  }\r\n\r\n  public enforceMinSize(x: number, y: number, marker: CornerMarker) {\r\n    const xLength = x - marker.getHorizontalNeighbour().position.x;\r\n    const yLength = y - marker.getVerticalNeighbour().position.y;\r\n    const xOver = this.minWidth - Math.abs(xLength);\r\n    const yOver = this.minHeight - Math.abs(yLength);\r\n\r\n    if (xLength === 0 || yLength === 0) {\r\n      x = marker.position.x;\r\n      y = marker.position.y;\r\n\r\n      return new PointPool().instance.borrow(x, y);\r\n    }\r\n\r\n    if (this.keepAspect) {\r\n      if (xOver > 0 && yOver / this.aspectRatio > 0) {\r\n        if (xOver > yOver / this.aspectRatio) {\r\n          if (xLength < 0) {\r\n            x -= xOver;\r\n\r\n            if (yLength < 0) {\r\n              y -= xOver * this.aspectRatio;\r\n            } else {\r\n              y += xOver * this.aspectRatio;\r\n            }\r\n          } else {\r\n            x += xOver;\r\n            if (yLength < 0) {\r\n              y -= xOver * this.aspectRatio;\r\n            } else {\r\n              y += xOver * this.aspectRatio;\r\n            }\r\n          }\r\n        } else {\r\n          if (yLength < 0) {\r\n            y -= yOver;\r\n\r\n            if (xLength < 0) {\r\n              x -= yOver / this.aspectRatio;\r\n            } else {\r\n              x += yOver / this.aspectRatio;\r\n            }\r\n          } else {\r\n            y += yOver;\r\n            if (xLength < 0) {\r\n              x -= yOver / this.aspectRatio;\r\n            } else {\r\n              x += yOver / this.aspectRatio;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (xOver > 0) {\r\n          if (xLength < 0) {\r\n            x -= xOver;\r\n            if (yLength < 0) {\r\n              y -= xOver * this.aspectRatio;\r\n            } else {\r\n              y += xOver * this.aspectRatio;\r\n            }\r\n          } else {\r\n            x += xOver;\r\n            if (yLength < 0) {\r\n              y -= xOver * this.aspectRatio;\r\n            } else {\r\n              y += xOver * this.aspectRatio;\r\n            }\r\n          }\r\n        } else {\r\n          if (yOver > 0) {\r\n            if (yLength < 0) {\r\n              y -= yOver;\r\n\r\n              if (xLength < 0) {\r\n                x -= yOver / this.aspectRatio;\r\n              } else {\r\n                x += yOver / this.aspectRatio;\r\n              }\r\n            } else {\r\n              y += yOver;\r\n              if (xLength < 0) {\r\n                x -= yOver / this.aspectRatio;\r\n              } else {\r\n                x += yOver / this.aspectRatio;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      if (xOver > 0) {\r\n        if (xLength < 0) {\r\n          x -= xOver;\r\n        } else {\r\n          x += xOver;\r\n        }\r\n      }\r\n      if (yOver > 0) {\r\n        if (yLength < 0) {\r\n          y -= yOver;\r\n        } else {\r\n          y += yOver;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (\r\n      x < this.minXClamp ||\r\n      x > this.maxXClamp ||\r\n      y < this.minYClamp ||\r\n      y > this.maxYClamp\r\n    ) {\r\n      x = marker.position.x;\r\n      y = marker.position.y;\r\n    }\r\n\r\n    return new PointPool().instance.borrow(x, y);\r\n  }\r\n\r\n  public dragCorner(x: number, y: number, marker: CornerMarker) {\r\n    let iX = 0;\r\n    let iY = 0;\r\n    let ax = 0;\r\n    let ay = 0;\r\n    let newHeight = 0;\r\n    let newWidth = 0;\r\n    let newY = 0;\r\n    let newX = 0;\r\n    let anchorMarker: CornerMarker;\r\n    let fold = 0;\r\n\r\n    if (this.keepAspect) {\r\n      anchorMarker = marker.getHorizontalNeighbour().getVerticalNeighbour();\r\n      ax = anchorMarker.position.x;\r\n      ay = anchorMarker.position.y;\r\n      if (x <= anchorMarker.position.x) {\r\n        if (y <= anchorMarker.position.y) {\r\n          iX = ax - 100 / this.aspectRatio;\r\n          iY = ay - (100 / this.aspectRatio) * this.aspectRatio;\r\n          fold = this.getSide(\r\n            new PointPool().instance.borrow(iX, iY),\r\n            anchorMarker.position,\r\n            new PointPool().instance.borrow(x, y)\r\n          );\r\n          if (fold > 0) {\r\n            newHeight = Math.abs(anchorMarker.position.y - y);\r\n            newWidth = newHeight / this.aspectRatio;\r\n            newY = anchorMarker.position.y - newHeight;\r\n            newX = anchorMarker.position.x - newWidth;\r\n            const min = this.enforceMinSize(newX, newY, marker);\r\n            marker.move(min.x, min.y);\r\n            new PointPool().instance.returnPoint(min);\r\n          } else {\r\n            if (fold < 0) {\r\n              newWidth = Math.abs(anchorMarker.position.x - x);\r\n              newHeight = newWidth * this.aspectRatio;\r\n              newY = anchorMarker.position.y - newHeight;\r\n              newX = anchorMarker.position.x - newWidth;\r\n              const min = this.enforceMinSize(newX, newY, marker);\r\n              marker.move(min.x, min.y);\r\n              new PointPool().instance.returnPoint(min);\r\n            }\r\n          }\r\n        } else {\r\n          iX = ax - 100 / this.aspectRatio;\r\n          iY = ay + (100 / this.aspectRatio) * this.aspectRatio;\r\n          fold = this.getSide(\r\n            new PointPool().instance.borrow(iX, iY),\r\n            anchorMarker.position,\r\n            new PointPool().instance.borrow(x, y)\r\n          );\r\n          if (fold > 0) {\r\n            newWidth = Math.abs(anchorMarker.position.x - x);\r\n            newHeight = newWidth * this.aspectRatio;\r\n            newY = anchorMarker.position.y + newHeight;\r\n            newX = anchorMarker.position.x - newWidth;\r\n            const min = this.enforceMinSize(newX, newY, marker);\r\n            marker.move(min.x, min.y);\r\n            new PointPool().instance.returnPoint(min);\r\n          } else {\r\n            if (fold < 0) {\r\n              newHeight = Math.abs(anchorMarker.position.y - y);\r\n              newWidth = newHeight / this.aspectRatio;\r\n              newY = anchorMarker.position.y + newHeight;\r\n              newX = anchorMarker.position.x - newWidth;\r\n              const min = this.enforceMinSize(newX, newY, marker);\r\n              marker.move(min.x, min.y);\r\n              new PointPool().instance.returnPoint(min);\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (y <= anchorMarker.position.y) {\r\n          iX = ax + 100 / this.aspectRatio;\r\n          iY = ay - (100 / this.aspectRatio) * this.aspectRatio;\r\n          fold = this.getSide(\r\n            new PointPool().instance.borrow(iX, iY),\r\n            anchorMarker.position,\r\n            new PointPool().instance.borrow(x, y)\r\n          );\r\n          if (fold < 0) {\r\n            newHeight = Math.abs(anchorMarker.position.y - y);\r\n            newWidth = newHeight / this.aspectRatio;\r\n            newY = anchorMarker.position.y - newHeight;\r\n            newX = anchorMarker.position.x + newWidth;\r\n            const min = this.enforceMinSize(newX, newY, marker);\r\n            marker.move(min.x, min.y);\r\n            new PointPool().instance.returnPoint(min);\r\n          } else {\r\n            if (fold > 0) {\r\n              newWidth = Math.abs(anchorMarker.position.x - x);\r\n              newHeight = newWidth * this.aspectRatio;\r\n              newY = anchorMarker.position.y - newHeight;\r\n              newX = anchorMarker.position.x + newWidth;\r\n              const min = this.enforceMinSize(newX, newY, marker);\r\n              marker.move(min.x, min.y);\r\n              new PointPool().instance.returnPoint(min);\r\n            }\r\n          }\r\n        } else {\r\n          iX = ax + 100 / this.aspectRatio;\r\n          iY = ay + (100 / this.aspectRatio) * this.aspectRatio;\r\n          fold = this.getSide(\r\n            new PointPool().instance.borrow(iX, iY),\r\n            anchorMarker.position,\r\n            new PointPool().instance.borrow(x, y)\r\n          );\r\n          if (fold < 0) {\r\n            newWidth = Math.abs(anchorMarker.position.x - x);\r\n            newHeight = newWidth * this.aspectRatio;\r\n            newY = anchorMarker.position.y + newHeight;\r\n            newX = anchorMarker.position.x + newWidth;\r\n            const min = this.enforceMinSize(newX, newY, marker);\r\n            marker.move(min.x, min.y);\r\n            new PointPool().instance.returnPoint(min);\r\n          } else {\r\n            if (fold > 0) {\r\n              newHeight = Math.abs(anchorMarker.position.y - y);\r\n              newWidth = newHeight / this.aspectRatio;\r\n              newY = anchorMarker.position.y + newHeight;\r\n              newX = anchorMarker.position.x + newWidth;\r\n              const min = this.enforceMinSize(newX, newY, marker);\r\n              marker.move(min.x, min.y);\r\n              new PointPool().instance.returnPoint(min);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      const min = this.enforceMinSize(x, y, marker);\r\n      marker.move(min.x, min.y);\r\n      new PointPool().instance.returnPoint(min);\r\n    }\r\n    this.center.recalculatePosition(this.getBounds());\r\n  }\r\n\r\n  public getSide(a: Point, b: Point, c: Point): number {\r\n    const n: number = this.sign(\r\n      (b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x)\r\n    );\r\n\r\n    // TODO move the return of the pools to outside of this function\r\n    new PointPool().instance.returnPoint(a);\r\n    new PointPool().instance.returnPoint(c);\r\n    return n;\r\n  }\r\n\r\n  public handleRelease(newCropTouch: CropTouch) {\r\n    if (newCropTouch == null) {\r\n      return;\r\n    }\r\n    let index = 0;\r\n    for (let k = 0; k < this.currentDragTouches.length; k++) {\r\n      if (newCropTouch.id === this.currentDragTouches[k].id) {\r\n        this.currentDragTouches[k].dragHandle.setDrag(false);\r\n        index = k;\r\n      }\r\n    }\r\n    this.currentDragTouches.splice(index, 1);\r\n    this.draw(this.ctx);\r\n  }\r\n\r\n  public handleMove(newCropTouch: CropTouch) {\r\n    let matched = false;\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let k = 0; k < this.currentDragTouches.length; k++) {\r\n      if (\r\n        newCropTouch.id === this.currentDragTouches[k].id &&\r\n        this.currentDragTouches[k].dragHandle != null\r\n      ) {\r\n        const dragTouch: CropTouch = this.currentDragTouches[k];\r\n        const clampedPositions = this.clampPosition(\r\n          newCropTouch.x - dragTouch.dragHandle.offset.x,\r\n          newCropTouch.y - dragTouch.dragHandle.offset.y\r\n        );\r\n        newCropTouch.x = clampedPositions.x;\r\n        newCropTouch.y = clampedPositions.y;\r\n        new PointPool().instance.returnPoint(clampedPositions);\r\n        if (dragTouch.dragHandle instanceof CornerMarker) {\r\n          this.dragCorner(\r\n            newCropTouch.x,\r\n            newCropTouch.y,\r\n            dragTouch.dragHandle as CornerMarker\r\n          );\r\n        } else {\r\n          this.dragCenter(\r\n            newCropTouch.x,\r\n            newCropTouch.y,\r\n            dragTouch.dragHandle as DragMarker\r\n          );\r\n        }\r\n        this.currentlyInteracting = true;\r\n        matched = true;\r\n        this.imageCropperDataShare.setPressed(this.canvas);\r\n        break;\r\n      }\r\n    }\r\n    if (!matched) {\r\n      for (const marker of this.markers) {\r\n        if (marker.touchInBounds(newCropTouch.x, newCropTouch.y)) {\r\n          newCropTouch.dragHandle = marker;\r\n          this.currentDragTouches.push(newCropTouch);\r\n          marker.setDrag(true);\r\n          newCropTouch.dragHandle.offset.x =\r\n            newCropTouch.x - newCropTouch.dragHandle.position.x;\r\n          newCropTouch.dragHandle.offset.y =\r\n            newCropTouch.y - newCropTouch.dragHandle.position.y;\r\n          this.dragCorner(\r\n            newCropTouch.x - newCropTouch.dragHandle.offset.x,\r\n            newCropTouch.y - newCropTouch.dragHandle.offset.y,\r\n            newCropTouch.dragHandle as CornerMarker\r\n          );\r\n          break;\r\n        }\r\n      }\r\n      if (\r\n        newCropTouch.dragHandle === null ||\r\n        typeof newCropTouch.dragHandle === 'undefined'\r\n      ) {\r\n        if (this.center.touchInBounds(newCropTouch.x, newCropTouch.y)) {\r\n          newCropTouch.dragHandle = this.center;\r\n          this.currentDragTouches.push(newCropTouch);\r\n          newCropTouch.dragHandle.setDrag(true);\r\n          newCropTouch.dragHandle.offset.x =\r\n            newCropTouch.x - newCropTouch.dragHandle.position.x;\r\n          newCropTouch.dragHandle.offset.y =\r\n            newCropTouch.y - newCropTouch.dragHandle.position.y;\r\n          this.dragCenter(\r\n            newCropTouch.x - newCropTouch.dragHandle.offset.x,\r\n            newCropTouch.y - newCropTouch.dragHandle.offset.y,\r\n            newCropTouch.dragHandle as DragMarker\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public updateClampBounds() {\r\n    const sourceAspect = this.srcImage.height / this.srcImage.width;\r\n    const canvasAspect = this.canvas.height / this.canvas.width;\r\n    let w = this.canvas.width;\r\n    let h = this.canvas.height;\r\n    if (canvasAspect > sourceAspect) {\r\n      w = this.canvas.width;\r\n      h = this.canvas.width * sourceAspect;\r\n    } else {\r\n      h = this.canvas.height;\r\n      w = this.canvas.height / sourceAspect;\r\n    }\r\n    this.minXClamp = this.canvas.width / 2 - w / 2;\r\n    this.minYClamp = this.canvas.height / 2 - h / 2;\r\n    this.maxXClamp = this.canvas.width / 2 + w / 2;\r\n    this.maxYClamp = this.canvas.height / 2 + h / 2;\r\n  }\r\n\r\n  public getCropBounds() {\r\n    const bounds = this.getBounds();\r\n    bounds.top = Math.round((bounds.top - this.minYClamp) / this.ratioH);\r\n    bounds.bottom = Math.round((bounds.bottom - this.minYClamp) / this.ratioH);\r\n    bounds.left = Math.round((bounds.left - this.minXClamp) / this.ratioW);\r\n    bounds.right = Math.round((bounds.right - this.minXClamp) / this.ratioW);\r\n    return bounds;\r\n  }\r\n\r\n  public clampPosition(x: number, y: number) {\r\n    if (x < this.minXClamp) {\r\n      x = this.minXClamp;\r\n    }\r\n    if (x > this.maxXClamp) {\r\n      x = this.maxXClamp;\r\n    }\r\n    if (y < this.minYClamp) {\r\n      y = this.minYClamp;\r\n    }\r\n    if (y > this.maxYClamp) {\r\n      y = this.maxYClamp;\r\n    }\r\n    return new PointPool().instance.borrow(x, y);\r\n  }\r\n\r\n  public isImageSet() {\r\n    return this.imageSet;\r\n  }\r\n\r\n  public setImage(img: any) {\r\n    this.srcImage = img;\r\n    if (!img) {\r\n      this.imageSet = false;\r\n      this.draw(this.ctx);\r\n    } else {\r\n      this.imageSet = true;\r\n      this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n      const bufferContext = this.buffer.getContext(\r\n        '2d'\r\n      ) as CanvasRenderingContext2D;\r\n      bufferContext.clearRect(0, 0, this.buffer.width, this.buffer.height);\r\n\r\n      if (!this.cropperSettings.fileType) {\r\n        this.fileType = this.getDataUriMimeType(img.src);\r\n      }\r\n\r\n      if (this.cropperSettings.minWithRelativeToResolution) {\r\n        this.minWidth =\r\n          (this.canvas.width * this.cropperSettings.minWidth) /\r\n          this.srcImage.width;\r\n        this.minHeight =\r\n          (this.canvas.height * this.cropperSettings.minHeight) /\r\n          this.srcImage.height;\r\n      }\r\n\r\n      this.updateClampBounds();\r\n      this.canvasWidth = this.canvas.width;\r\n      this.canvasHeight = this.canvas.height;\r\n\r\n      const cropPosition: Point[] = this.getCropPositionFromMarkers();\r\n      this.setCropPosition(cropPosition);\r\n    }\r\n  }\r\n\r\n  public updateCropPosition(cropBounds: Bounds): void {\r\n    const cropPosition: Point[] = this.getCropPositionFromBounds(cropBounds);\r\n    this.setCropPosition(cropPosition);\r\n  }\r\n\r\n  private setCropPosition(cropPosition: Point[]): void {\r\n    this.tl.setPosition(cropPosition[0].x, cropPosition[0].y);\r\n    this.tr.setPosition(cropPosition[1].x, cropPosition[1].y);\r\n    this.bl.setPosition(cropPosition[2].x, cropPosition[2].y);\r\n    this.br.setPosition(cropPosition[3].x, cropPosition[3].y);\r\n    this.center.setPosition(cropPosition[4].x, cropPosition[4].y);\r\n\r\n    for (const position of cropPosition) {\r\n      new PointPool().instance.returnPoint(position);\r\n    }\r\n\r\n    this.vertSquashRatio = this.detectVerticalSquash(this.srcImage);\r\n    this.draw(this.ctx);\r\n    this.croppedImage = this.getCroppedImageHelper(\r\n      false,\r\n      this.cropWidth,\r\n      this.cropHeight\r\n    );\r\n  }\r\n\r\n  private getCropPositionFromMarkers(): Point[] {\r\n    const w: number = this.canvas.width;\r\n    const h: number = this.canvas.height;\r\n    let tlPos: Point;\r\n    let trPos: Point;\r\n    let blPos: Point;\r\n    let brPos: Point;\r\n    let center: Point;\r\n    const sourceAspect: number = this.srcImage.height / this.srcImage.width;\r\n    const cropBounds: Bounds = this.getBounds();\r\n    const cropAspect: number = cropBounds.height / cropBounds.width;\r\n    const cX: number = this.canvas.width / 2;\r\n    const cY: number = this.canvas.height / 2;\r\n\r\n    if (cropAspect > sourceAspect) {\r\n      const imageH = Math.min(w * sourceAspect, h);\r\n      const cropW = imageH / cropAspect;\r\n      tlPos = new PointPool().instance.borrow(cX - cropW / 2, cY + imageH / 2);\r\n      trPos = new PointPool().instance.borrow(cX + cropW / 2, cY + imageH / 2);\r\n      blPos = new PointPool().instance.borrow(cX - cropW / 2, cY - imageH / 2);\r\n      brPos = new PointPool().instance.borrow(cX + cropW / 2, cY - imageH / 2);\r\n    } else {\r\n      const imageW = Math.min(h / sourceAspect, w);\r\n      const cropH = imageW * cropAspect;\r\n      tlPos = new PointPool().instance.borrow(cX - imageW / 2, cY + cropH / 2);\r\n      trPos = new PointPool().instance.borrow(cX + imageW / 2, cY + cropH / 2);\r\n      blPos = new PointPool().instance.borrow(cX - imageW / 2, cY - cropH / 2);\r\n      brPos = new PointPool().instance.borrow(cX + imageW / 2, cY - cropH / 2);\r\n    }\r\n\r\n    center = new PointPool().instance.borrow(cX, cY);\r\n    const positions: Point[] = [tlPos, trPos, blPos, brPos, center];\r\n    return positions;\r\n  }\r\n\r\n  private getCropPositionFromBounds(cropPosition: Bounds): Point[] {\r\n    let marginTop = 0;\r\n    let marginLeft = 0;\r\n    const canvasAspect: number = this.canvasHeight / this.canvasWidth;\r\n    const sourceAspect: number = this.srcImage.height / this.srcImage.width;\r\n\r\n    if (canvasAspect > sourceAspect) {\r\n      marginTop =\r\n        this.buffer.height / 2 - (this.canvasWidth * sourceAspect) / 2;\r\n    } else {\r\n      marginLeft = this.buffer.width / 2 - this.canvasHeight / sourceAspect / 2;\r\n    }\r\n\r\n    const ratioW: number =\r\n      (this.canvasWidth - marginLeft * 2) / this.srcImage.width;\r\n    const ratioH: number =\r\n      (this.canvasHeight - marginTop * 2) / this.srcImage.height;\r\n\r\n    let actualH: number = cropPosition.height * ratioH;\r\n    let actualW: number = cropPosition.width * ratioW;\r\n    const actualX: number = cropPosition.left * ratioW + marginLeft;\r\n    const actualY: number = cropPosition.top * ratioH + marginTop;\r\n\r\n    if (this.keepAspect) {\r\n      const scaledW: number = actualH / this.aspectRatio;\r\n      const scaledH: number = actualW * this.aspectRatio;\r\n\r\n      if (this.getCropBounds().height === cropPosition.height) {\r\n        // only width changed\r\n        actualH = scaledH;\r\n      } else if (this.getCropBounds().width === cropPosition.width) {\r\n        // only height changed\r\n        actualW = scaledW;\r\n      } else {\r\n        // height and width changed\r\n        if (Math.abs(scaledH - actualH) < Math.abs(scaledW - actualW)) {\r\n          actualW = scaledW;\r\n        } else {\r\n          actualH = scaledH;\r\n        }\r\n      }\r\n    }\r\n\r\n    const tlPos: Point = new PointPool().instance.borrow(\r\n      actualX,\r\n      actualY + actualH\r\n    );\r\n    const trPos: Point = new PointPool().instance.borrow(\r\n      actualX + actualW,\r\n      actualY + actualH\r\n    );\r\n    const blPos: Point = new PointPool().instance.borrow(actualX, actualY);\r\n    const brPos: Point = new PointPool().instance.borrow(\r\n      actualX + actualW,\r\n      actualY\r\n    );\r\n    const center: Point = new PointPool().instance.borrow(\r\n      actualX + actualW / 2,\r\n      actualY + actualH / 2\r\n    );\r\n\r\n    const positions: Point[] = [tlPos, trPos, blPos, brPos, center];\r\n    return positions;\r\n  }\r\n\r\n  public getCroppedImageHelper(\r\n    preserveSize?: boolean,\r\n    fillWidth?: number,\r\n    fillHeight?: number\r\n  ): HTMLImageElement {\r\n    if (this.cropperSettings.cropOnResize) {\r\n      return this.getCroppedImage(preserveSize, fillWidth, fillHeight);\r\n    }\r\n    return this.croppedImage\r\n      ? this.croppedImage\r\n      : document.createElement('img');\r\n  }\r\n\r\n  // todo: Unused parameters?\r\n  public getCroppedImage(\r\n    preserveSize?: boolean,\r\n    fillWidth?: number,\r\n    fillHeight?: number\r\n  ): HTMLImageElement {\r\n    const bounds: Bounds = this.getBounds();\r\n    if (!this.srcImage) {\r\n      return document.createElement('img');\r\n    } else {\r\n      const sourceAspect: number = this.srcImage.height / this.srcImage.width;\r\n      const canvasAspect: number = this.canvas.height / this.canvas.width;\r\n      let w: number = this.canvas.width;\r\n      let h: number = this.canvas.height;\r\n      if (canvasAspect > sourceAspect) {\r\n        w = this.canvas.width;\r\n        h = this.canvas.width * sourceAspect;\r\n      } else {\r\n        if (canvasAspect < sourceAspect) {\r\n          h = this.canvas.height;\r\n          w = this.canvas.height / sourceAspect;\r\n        } else {\r\n          h = this.canvas.height;\r\n          w = this.canvas.width;\r\n        }\r\n      }\r\n      this.ratioW = w / this.srcImage.width;\r\n      this.ratioH = h / this.srcImage.height;\r\n      const offsetH: number = (this.buffer.height - h) / 2 / this.ratioH;\r\n      const offsetW: number = (this.buffer.width - w) / 2 / this.ratioW;\r\n\r\n      const ctx = this.cropCanvas.getContext('2d') as CanvasRenderingContext2D;\r\n\r\n      if (this.cropperSettings.preserveSize || preserveSize) {\r\n        const width = Math.round(\r\n          bounds.right / this.ratioW - bounds.left / this.ratioW\r\n        );\r\n        const height = Math.round(\r\n          bounds.bottom / this.ratioH - bounds.top / this.ratioH\r\n        );\r\n\r\n        this.cropCanvas.width = width;\r\n        this.cropCanvas.height = height;\r\n\r\n        this.cropperSettings.croppedWidth = this.cropCanvas.width;\r\n        this.cropperSettings.croppedHeight = this.cropCanvas.height;\r\n      } else {\r\n        this.cropCanvas.width = this.cropWidth;\r\n        this.cropCanvas.height = this.cropHeight;\r\n      }\r\n\r\n      ctx.clearRect(0, 0, this.cropCanvas.width, this.cropCanvas.height);\r\n      this.drawImageIOSFix(\r\n        ctx,\r\n        this.srcImage,\r\n        Math.max(Math.round(bounds.left / this.ratioW - offsetW), 0),\r\n        Math.max(Math.round(bounds.top / this.ratioH - offsetH), 0),\r\n        Math.max(Math.round(bounds.width / this.ratioW), 1),\r\n        Math.max(Math.round(bounds.height / this.ratioH), 1),\r\n        0,\r\n        0,\r\n        this.cropCanvas.width,\r\n        this.cropCanvas.height\r\n      );\r\n\r\n      if (this.cropperSettings.resampleFn) {\r\n        this.cropperSettings.resampleFn(this.cropCanvas);\r\n      }\r\n\r\n      this.croppedImage.width = this.cropCanvas.width;\r\n      this.croppedImage.height = this.cropCanvas.height;\r\n      this.croppedImage.src = this.cropCanvas.toDataURL(\r\n        this.fileType,\r\n        this.cropperSettings.compressRatio\r\n      );\r\n      return this.croppedImage;\r\n    }\r\n  }\r\n\r\n  public getBounds(): Bounds {\r\n    let minX = Number.MAX_VALUE;\r\n    let minY = Number.MAX_VALUE;\r\n    let maxX = -Number.MAX_VALUE;\r\n    let maxY = -Number.MAX_VALUE;\r\n    for (const marker of this.markers) {\r\n      if (marker.position.x < minX) {\r\n        minX = marker.position.x;\r\n      }\r\n      if (marker.position.x > maxX) {\r\n        maxX = marker.position.x;\r\n      }\r\n      if (marker.position.y < minY) {\r\n        minY = marker.position.y;\r\n      }\r\n      if (marker.position.y > maxY) {\r\n        maxY = marker.position.y;\r\n      }\r\n    }\r\n    const bounds: Bounds = new Bounds();\r\n    bounds.left = minX;\r\n    bounds.right = maxX;\r\n    bounds.top = minY;\r\n    bounds.bottom = maxY;\r\n    return bounds;\r\n  }\r\n\r\n  public setBounds(bounds: any) {\r\n    // const topLeft: CornerMarker;\r\n    // const topRight: CornerMarker;\r\n    // const bottomLeft: CornerMarker;\r\n    // const bottomRight: CornerMarker;\r\n\r\n    const currentBounds = this.getBounds();\r\n    for (const marker of this.markers) {\r\n      if (marker.position.x === currentBounds.left) {\r\n        if (marker.position.y === currentBounds.top) {\r\n          marker.setPosition(bounds.left, bounds.top);\r\n        } else {\r\n          marker.setPosition(bounds.left, bounds.bottom);\r\n        }\r\n      } else {\r\n        if (marker.position.y === currentBounds.top) {\r\n          marker.setPosition(bounds.right, bounds.top);\r\n        } else {\r\n          marker.setPosition(bounds.right, bounds.bottom);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.center.recalculatePosition(bounds);\r\n    this.center.draw(this.ctx);\r\n    this.draw(this.ctx); // we need to redraw all canvas if we have changed bounds\r\n  }\r\n\r\n  public onTouchMove(event: TouchEvent) {\r\n    if (this.crop.isImageSet()) {\r\n      if (event.touches.length === 1) {\r\n        if (this.isMouseDown) {\r\n          event.preventDefault();\r\n          // tslint:disable-next-line:prefer-for-of\r\n          for (let i = 0; i < event.touches.length; i++) {\r\n            const touch = event.touches[i];\r\n            const touchPosition = this.getTouchPos(this.canvas, touch);\r\n            const cropTouch = new CropTouch(\r\n              touchPosition.x,\r\n              touchPosition.y,\r\n              touch.identifier\r\n            );\r\n            new PointPool().instance.returnPoint(touchPosition);\r\n            this.move(cropTouch);\r\n          }\r\n        }\r\n      } else {\r\n        if (event.touches.length === 2) {\r\n          event.preventDefault();\r\n\r\n          const distance =\r\n            (event.touches[0].clientX - event.touches[1].clientX) *\r\n              (event.touches[0].clientX - event.touches[1].clientX) +\r\n            (event.touches[0].clientY - event.touches[1].clientY) *\r\n              (event.touches[0].clientY - event.touches[1].clientY);\r\n          if (this.previousDistance && this.previousDistance !== distance) {\r\n            const bounds = this.getBounds();\r\n\r\n            if (distance < this.previousDistance) {\r\n              bounds.top += 1;\r\n              bounds.left += 1;\r\n              bounds.right -= 1;\r\n              bounds.bottom -= 1;\r\n            }\r\n\r\n            if (distance > this.previousDistance) {\r\n              if (\r\n                bounds.top !== this.minYClamp &&\r\n                bounds.bottom !== this.maxYClamp &&\r\n                bounds.left !== this.minXClamp &&\r\n                bounds.right !== this.maxXClamp\r\n              ) {\r\n                // none\r\n                bounds.top -= 1;\r\n                bounds.left -= 1;\r\n                bounds.right += 1;\r\n                bounds.bottom += 1;\r\n              } else if (\r\n                bounds.top !== this.minYClamp &&\r\n                bounds.bottom !== this.maxYClamp &&\r\n                bounds.left === this.minXClamp &&\r\n                bounds.right !== this.maxXClamp\r\n              ) {\r\n                // left\r\n                bounds.top -= 1;\r\n                bounds.right += 2;\r\n                bounds.bottom += 1;\r\n              } else if (\r\n                bounds.top !== this.minYClamp &&\r\n                bounds.bottom !== this.maxYClamp &&\r\n                bounds.left !== this.minXClamp &&\r\n                bounds.right === this.maxXClamp\r\n              ) {\r\n                // right\r\n                bounds.top -= 1;\r\n                bounds.left -= 2;\r\n                bounds.bottom += 1;\r\n              } else if (\r\n                bounds.top === this.minYClamp &&\r\n                bounds.bottom !== this.maxYClamp &&\r\n                bounds.left !== this.minXClamp &&\r\n                bounds.right !== this.maxXClamp\r\n              ) {\r\n                // top\r\n                bounds.left -= 1;\r\n                bounds.right += 1;\r\n                bounds.bottom += 2;\r\n              } else if (\r\n                bounds.top !== this.minYClamp &&\r\n                bounds.bottom === this.maxYClamp &&\r\n                bounds.left !== this.minXClamp &&\r\n                bounds.right !== this.maxXClamp\r\n              ) {\r\n                // bottom\r\n                bounds.top -= 2;\r\n                bounds.left -= 1;\r\n                bounds.right += 1;\r\n              } else if (\r\n                bounds.top === this.minYClamp &&\r\n                bounds.bottom !== this.maxYClamp &&\r\n                bounds.left === this.minXClamp &&\r\n                bounds.right !== this.maxXClamp\r\n              ) {\r\n                // top left\r\n                bounds.right += 2;\r\n                bounds.bottom += 2;\r\n              } else if (\r\n                bounds.top === this.minYClamp &&\r\n                bounds.bottom !== this.maxYClamp &&\r\n                bounds.left !== this.minXClamp &&\r\n                bounds.right === this.maxXClamp\r\n              ) {\r\n                // top right\r\n                bounds.left -= 2;\r\n                bounds.bottom += 2;\r\n              } else if (\r\n                bounds.top !== this.minYClamp &&\r\n                bounds.bottom === this.maxYClamp &&\r\n                bounds.left === this.minXClamp &&\r\n                bounds.right !== this.maxXClamp\r\n              ) {\r\n                // bottom left\r\n                bounds.top -= 2;\r\n                bounds.right += 2;\r\n              } else if (\r\n                bounds.top !== this.minYClamp &&\r\n                bounds.bottom === this.maxYClamp &&\r\n                bounds.left !== this.minXClamp &&\r\n                bounds.right === this.maxXClamp\r\n              ) {\r\n                // bottom right\r\n                bounds.top -= 2;\r\n                bounds.left -= 2;\r\n              }\r\n            }\r\n\r\n            if (bounds.top < this.minYClamp) {\r\n              bounds.top = this.minYClamp;\r\n            }\r\n            if (bounds.bottom > this.maxYClamp) {\r\n              bounds.bottom = this.maxYClamp;\r\n            }\r\n            if (bounds.left < this.minXClamp) {\r\n              bounds.left = this.minXClamp;\r\n            }\r\n            if (bounds.right > this.maxXClamp) {\r\n              bounds.right = this.maxXClamp;\r\n            }\r\n\r\n            this.setBounds(bounds);\r\n          }\r\n          this.previousDistance = distance;\r\n        }\r\n      }\r\n      this.draw(this.ctx);\r\n    }\r\n  }\r\n\r\n  public onMouseMove(e: MouseEvent) {\r\n    if (this.crop.isImageSet() && this.isMouseDown) {\r\n      const mousePosition = this.getMousePos(this.canvas, e);\r\n      this.move(new CropTouch(mousePosition.x, mousePosition.y, 0));\r\n      let dragTouch = this.getDragTouchForID(0);\r\n      if (dragTouch) {\r\n        dragTouch.x = mousePosition.x;\r\n        dragTouch.y = mousePosition.y;\r\n      } else {\r\n        dragTouch = new CropTouch(mousePosition.x, mousePosition.y, 0);\r\n      }\r\n      new PointPool().instance.returnPoint(mousePosition);\r\n      this.drawCursors(dragTouch);\r\n      this.draw(this.ctx);\r\n    }\r\n  }\r\n\r\n  public move(cropTouch: CropTouch) {\r\n    if (this.isMouseDown) {\r\n      this.handleMove(cropTouch);\r\n    }\r\n  }\r\n\r\n  public getDragTouchForID(id: any): CropTouch | undefined {\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let i = 0; i < this.currentDragTouches.length; i++) {\r\n      if (id === this.currentDragTouches[i].id) {\r\n        return this.currentDragTouches[i];\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  public drawCursors(cropTouch: CropTouch) {\r\n    let cursorDrawn = false;\r\n    if (cropTouch != null) {\r\n      if (cropTouch.dragHandle === this.center) {\r\n        this.imageCropperDataShare.setStyle(this.canvas, 'move');\r\n        cursorDrawn = true;\r\n      }\r\n      if (\r\n        cropTouch.dragHandle !== null &&\r\n        cropTouch.dragHandle instanceof CornerMarker\r\n      ) {\r\n        this.drawCornerCursor(\r\n          cropTouch.dragHandle,\r\n          cropTouch.dragHandle.position.x,\r\n          cropTouch.dragHandle.position.y\r\n        );\r\n        cursorDrawn = true;\r\n      }\r\n    }\r\n    let didDraw = false;\r\n    if (!cursorDrawn) {\r\n      // tslint:disable-next-line:prefer-for-of\r\n      for (let i = 0; i < this.markers.length; i++) {\r\n        didDraw =\r\n          didDraw ||\r\n          this.drawCornerCursor(this.markers[i], cropTouch.x, cropTouch.y);\r\n      }\r\n      if (!didDraw) {\r\n        this.imageCropperDataShare.setStyle(this.canvas, 'initial');\r\n      }\r\n    }\r\n    if (\r\n      !didDraw &&\r\n      !cursorDrawn &&\r\n      this.center.touchInBounds(cropTouch.x, cropTouch.y)\r\n    ) {\r\n      this.center.setOver(true);\r\n      this.imageCropperDataShare.setOver(this.canvas);\r\n      this.imageCropperDataShare.setStyle(this.canvas, 'move');\r\n    } else {\r\n      this.center.setOver(false);\r\n    }\r\n  }\r\n\r\n  public drawCornerCursor(marker: any, x: number, y: number) {\r\n    if (marker.touchInBounds(x, y)) {\r\n      marker.setOver(true);\r\n      if (marker.getHorizontalNeighbour().position.x > marker.position.x) {\r\n        if (marker.getVerticalNeighbour().position.y > marker.position.y) {\r\n          this.imageCropperDataShare.setOver(this.canvas);\r\n          this.imageCropperDataShare.setStyle(this.canvas, 'nwse-resize');\r\n        } else {\r\n          this.imageCropperDataShare.setOver(this.canvas);\r\n          this.imageCropperDataShare.setStyle(this.canvas, 'nesw-resize');\r\n        }\r\n      } else {\r\n        if (marker.getVerticalNeighbour().position.y > marker.position.y) {\r\n          this.imageCropperDataShare.setOver(this.canvas);\r\n          this.imageCropperDataShare.setStyle(this.canvas, 'nesw-resize');\r\n        } else {\r\n          this.imageCropperDataShare.setOver(this.canvas);\r\n          this.imageCropperDataShare.setStyle(this.canvas, 'nwse-resize');\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    marker.setOver(false);\r\n    return false;\r\n  }\r\n\r\n  public onTouchStart(event: TouchEvent) {\r\n    if (this.crop.isImageSet()) {\r\n      const touch = event.touches[0];\r\n      const touchPosition = this.getTouchPos(this.canvas, touch);\r\n      const cropTouch = new CropTouch(\r\n        touchPosition.x,\r\n        touchPosition.y,\r\n        touch.identifier\r\n      );\r\n      new PointPool().instance.returnPoint(touchPosition);\r\n\r\n      this.isMouseDown = false;\r\n      for (const marker of this.markers) {\r\n        if (marker.touchInBounds(cropTouch.x, cropTouch.y)) {\r\n          this.isMouseDown = true;\r\n        }\r\n      }\r\n      if (this.center.touchInBounds(cropTouch.x, cropTouch.y)) {\r\n        this.isMouseDown = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  public onTouchEnd(event: TouchEvent) {\r\n    if (this.crop.isImageSet()) {\r\n      // tslint:disable-next-line:prefer-for-of\r\n      for (let i = 0; i < event.changedTouches.length; i++) {\r\n        const touch = event.changedTouches[i];\r\n        const dragTouch = this.getDragTouchForID(touch.identifier);\r\n        if (dragTouch && dragTouch !== undefined) {\r\n          if (\r\n            dragTouch.dragHandle instanceof CornerMarker ||\r\n            dragTouch.dragHandle instanceof DragMarker\r\n          ) {\r\n            dragTouch.dragHandle.setOver(false);\r\n          }\r\n          this.handleRelease(dragTouch);\r\n        }\r\n      }\r\n\r\n      if (this.currentDragTouches.length === 0) {\r\n        this.isMouseDown = false;\r\n        this.currentlyInteracting = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  // http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios\r\n  public drawImageIOSFix(\r\n    ctx: CanvasRenderingContext2D,\r\n    img: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement,\r\n    sx: number,\r\n    sy: number,\r\n    sw: number,\r\n    sh: number,\r\n    dx: number,\r\n    dy: number,\r\n    dw: number,\r\n    dh: number\r\n  ) {\r\n    // Works only if whole image is displayed:\r\n    // ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);\r\n    // The following works correct also when only a part of the image is displayed:\r\n    // ctx.drawImage(img, sx * this.vertSquashRatio, sy * this.vertSquashRatio, sw * this.vertSquashRatio, sh *\r\n    // this.vertSquashRatio, dx, dy, dw, dh);\r\n    ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh);\r\n  }\r\n\r\n  public onMouseDown(event: MouseEvent) {\r\n    if (this.crop.isImageSet()) {\r\n      this.isMouseDown = true;\r\n    }\r\n  }\r\n\r\n  public onMouseUp(event: MouseEvent) {\r\n    if (this.crop.isImageSet()) {\r\n      this.imageCropperDataShare.setReleased(this.canvas);\r\n      this.isMouseDown = false;\r\n      this.handleRelease(new CropTouch(0, 0, 0));\r\n    }\r\n  }\r\n}\r\n","import { Bounds } from './bounds';\r\n\r\nexport class CropPosition {\r\n  public x: number;\r\n  public y: number;\r\n  public w: number;\r\n  public h: number;\r\n\r\n  constructor(x: number = 0, y: number = 0, w: number = 0, h: number = 0) {\r\n    this.x = +x;\r\n    this.y = +y;\r\n    this.w = +w;\r\n    this.h = +h;\r\n  }\r\n\r\n  public toBounds(): Bounds {\r\n    return new Bounds(this.x, this.y, this.w, this.h);\r\n  }\r\n\r\n  public isInitialized(): boolean {\r\n    return this.x !== 0 && this.y !== 0 && this.w !== 0 && this.h !== 0;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  AfterViewInit,\r\n  OnChanges,\r\n  OnDestroy,\r\n  ViewChild,\r\n  ElementRef,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  Renderer2,\r\n  SimpleChanges, Inject\r\n} from '@angular/core';\r\nimport { CropperSettings } from './cropper-settings';\r\nimport { ImageCropper } from './imageCropper';\r\nimport { CropPosition } from './model/cropPosition';\r\nimport { Bounds } from './model/bounds';\r\nimport { Exif } from './exif';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'img-cropper',\r\n  templateUrl: './image-cropper.component.html'\r\n})\r\nexport class ImageCropperComponent\r\n  implements AfterViewInit, OnChanges, OnDestroy {\r\n  @ViewChild('cropcanvas', { static: true })\r\n  cropcanvas: ElementRef;\r\n  @ViewChild('fileInput') fileInput: ElementRef;\r\n\r\n  @Input() public settings: CropperSettings;\r\n  @Input() public image: any;\r\n  @Input() public inputImage: any;\r\n  @Input() public cropper: ImageCropper;\r\n  @Input() public cropPosition: CropPosition;\r\n  @Output()\r\n  public cropPositionChange: EventEmitter<CropPosition> = new EventEmitter<\r\n    CropPosition\r\n  >();\r\n\r\n  private exif = new Exif();\r\n\r\n  // tslint:disable-next-line:no-output-on-prefix\r\n  @Output() public onCrop: EventEmitter<any> = new EventEmitter();\r\n  @Output() imageSet: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  public croppedWidth: number;\r\n  public croppedHeight: number;\r\n  public intervalRef: number;\r\n  public raf: number;\r\n  public renderer: Renderer2;\r\n  public windowListener: EventListenerObject;\r\n\r\n  private isCropPositionUpdateNeeded: boolean;\r\n  private dragUnsubscribers: (() => void)[] = [];\r\n\r\n  constructor(renderer: Renderer2,\r\n              @Inject(DOCUMENT) private document) {\r\n    this.renderer = renderer;\r\n  }\r\n\r\n  public ngAfterViewInit(): void {\r\n    const canvas: HTMLCanvasElement = this.cropcanvas.nativeElement;\r\n\r\n    if (!this.settings) {\r\n      this.settings = new CropperSettings();\r\n    }\r\n\r\n    if (this.settings.cropperClass) {\r\n      this.renderer.setAttribute(canvas, 'class', this.settings.cropperClass);\r\n    }\r\n\r\n    if (!this.settings.dynamicSizing) {\r\n      this.renderer.setAttribute(\r\n        canvas,\r\n        'width',\r\n        this.settings.canvasWidth.toString()\r\n      );\r\n      this.renderer.setAttribute(\r\n        canvas,\r\n        'height',\r\n        this.settings.canvasHeight.toString()\r\n      );\r\n    } else {\r\n      this.windowListener = this.resize.bind(this);\r\n      window.addEventListener('resize', this.windowListener);\r\n    }\r\n\r\n    if (!this.cropper) {\r\n      this.cropper = new ImageCropper(this.settings);\r\n    }\r\n\r\n    this.cropper.prepare(canvas);\r\n  }\r\n\r\n  public ngOnChanges(changes: SimpleChanges): void {\r\n    if (this.isCropPositionChanged(changes)) {\r\n      this.cropper.updateCropPosition(this.cropPosition.toBounds());\r\n      if (this.cropper.isImageSet()) {\r\n        const bounds = this.cropper.getCropBounds();\r\n        this.image.image = this.cropper.getCroppedImageHelper().src;\r\n        this.onCrop.emit(bounds);\r\n      }\r\n      this.updateCropBounds();\r\n    }\r\n\r\n    if (changes.inputImage) {\r\n      this.setImage(changes.inputImage.currentValue);\r\n    }\r\n\r\n    if (changes.settings && this.cropper) {\r\n      this.cropper.updateSettings(this.settings);\r\n      if (this.cropper.isImageSet()) {\r\n        this.image.image = this.cropper.getCroppedImageHelper().src;\r\n        this.onCrop.emit(this.cropper.getCropBounds());\r\n      }\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.removeDragListeners();\r\n    if (this.settings.dynamicSizing && this.windowListener) {\r\n      window.removeEventListener('resize', this.windowListener);\r\n    }\r\n  }\r\n\r\n  public onTouchMove(event: TouchEvent): void {\r\n    this.cropper.onTouchMove(event);\r\n  }\r\n\r\n  public onTouchStart(event: TouchEvent): void {\r\n    this.cropper.onTouchStart(event);\r\n  }\r\n\r\n  public onTouchEnd(event: TouchEvent): void {\r\n    this.cropper.onTouchEnd(event);\r\n    if (this.cropper.isImageSet()) {\r\n      this.image.image = this.cropper.getCroppedImageHelper().src;\r\n      this.onCrop.emit(this.cropper.getCropBounds());\r\n      this.updateCropBounds();\r\n    }\r\n  }\r\n\r\n  public onMouseDown(event: MouseEvent): void {\r\n    this.dragUnsubscribers.push(this.renderer.listen(this.document, 'mousemove', this.onMouseMove.bind(this)));\r\n    this.dragUnsubscribers.push(this.renderer.listen(this.document, 'mouseup', this.onMouseUp.bind(this)));\r\n\r\n    this.cropper.onMouseDown(event);\r\n    // if (!this.cropper.isImageSet() && !this.settings.noFileInput) {\r\n    //   // load img\r\n    //   this.fileInput.nativeElement.click();\r\n    // }\r\n  }\r\n\r\n  private removeDragListeners() {\r\n    this.dragUnsubscribers.forEach(unsubscribe => unsubscribe());\r\n  }\r\n\r\n  public onMouseUp(event: MouseEvent): void {\r\n    this.removeDragListeners();\r\n    if (this.cropper.isImageSet()) {\r\n      this.cropper.onMouseUp(event);\r\n      this.image.image = this.cropper.getCroppedImageHelper().src;\r\n      this.onCrop.emit(this.cropper.getCropBounds());\r\n      this.updateCropBounds();\r\n    }\r\n  }\r\n\r\n  public onMouseMove(event: MouseEvent): void {\r\n    this.cropper.onMouseMove(event);\r\n  }\r\n\r\n  public fileChangeListener($event: any) {\r\n    if ($event.target.files.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const file: File = $event.target.files[0];\r\n    if (this.settings.allowedFilesRegex.test(file.name)) {\r\n      const image: any = new Image();\r\n      const fileReader: FileReader = new FileReader();\r\n\r\n      fileReader.addEventListener('loadend', (loadEvent: any) => {\r\n        image.addEventListener('load', () => {\r\n          this.setImage(image);\r\n        });\r\n        image.src = loadEvent.target.result;\r\n      });\r\n\r\n      fileReader.readAsDataURL(file);\r\n    }\r\n  }\r\n\r\n  private resize() {\r\n    const canvas: HTMLCanvasElement = this.cropcanvas.nativeElement;\r\n    this.settings.canvasWidth = canvas.offsetWidth;\r\n    this.settings.canvasHeight = canvas.offsetHeight;\r\n    this.cropper.resizeCanvas(canvas.offsetWidth, canvas.offsetHeight, true);\r\n  }\r\n\r\n  public reset(): void {\r\n    this.cropper.reset();\r\n    this.renderer.setAttribute(\r\n      this.cropcanvas.nativeElement,\r\n      'class',\r\n      this.settings.cropperClass\r\n    );\r\n    this.image.image = this.cropper.getCroppedImageHelper().src;\r\n  }\r\n\r\n  public setImage(image: HTMLImageElement, newBounds: any = null) {\r\n    this.imageSet.emit(true);\r\n    this.renderer.setAttribute(\r\n      this.cropcanvas.nativeElement,\r\n      'class',\r\n      `${this.settings.cropperClass} ${this.settings.croppingClass}`\r\n    );\r\n    this.raf = window.requestAnimationFrame(() => {\r\n      if (this.raf) {\r\n        window.cancelAnimationFrame(this.raf);\r\n      }\r\n      if (image.naturalHeight > 0 && image.naturalWidth > 0) {\r\n        image.height = image.naturalHeight;\r\n        image.width = image.naturalWidth;\r\n\r\n        window.cancelAnimationFrame(this.raf);\r\n        this.getOrientedImage(image, (img: HTMLImageElement) => {\r\n          if (this.settings.dynamicSizing) {\r\n            const canvas: HTMLCanvasElement = this.cropcanvas.nativeElement;\r\n            this.settings.canvasWidth = canvas.offsetWidth;\r\n            this.settings.canvasHeight = canvas.offsetHeight;\r\n            this.cropper.resizeCanvas(\r\n              canvas.offsetWidth,\r\n              canvas.offsetHeight,\r\n              false\r\n            );\r\n          }\r\n\r\n          this.cropper.setImage(img);\r\n          if (this.cropPosition && this.cropPosition.isInitialized()) {\r\n            this.cropper.updateCropPosition(this.cropPosition.toBounds());\r\n          }\r\n\r\n          this.image.original = img;\r\n          let bounds = this.cropper.getCropBounds();\r\n          this.image.image = this.cropper.getCroppedImageHelper().src;\r\n\r\n          if (!this.image) {\r\n            this.image = image;\r\n          }\r\n\r\n          if (newBounds != null) {\r\n            bounds = newBounds;\r\n            this.cropper.setBounds(bounds);\r\n            this.cropper.updateCropPosition(bounds);\r\n          }\r\n          this.onCrop.emit(bounds);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private isCropPositionChanged(changes: SimpleChanges): boolean {\r\n    if (\r\n      this.cropper &&\r\n      changes.cropPosition &&\r\n      this.isCropPositionUpdateNeeded\r\n    ) {\r\n      return true;\r\n    } else {\r\n      this.isCropPositionUpdateNeeded = true;\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private updateCropBounds(): void {\r\n    const cropBound: Bounds = this.cropper.getCropBounds();\r\n    this.cropPositionChange.emit(\r\n      new CropPosition(\r\n        cropBound.left,\r\n        cropBound.top,\r\n        cropBound.width,\r\n        cropBound.height\r\n      )\r\n    );\r\n    this.isCropPositionUpdateNeeded = false;\r\n  }\r\n\r\n  private getOrientedImage(\r\n    image: HTMLImageElement,\r\n    callback: (img: HTMLImageElement) => void\r\n  ) {\r\n    let img: any;\r\n\r\n    this.exif.getData(image, () => {\r\n      const orientation = this.exif.getTag(image, 'Orientation');\r\n\r\n      if ([3, 6, 8].indexOf(orientation) > -1) {\r\n        const canvas: HTMLCanvasElement = document.createElement('canvas');\r\n        const ctx: CanvasRenderingContext2D = canvas.getContext(\r\n          '2d'\r\n        ) as CanvasRenderingContext2D;\r\n        let cw: number = image.width;\r\n        let ch: number = image.height;\r\n        let cx = 0;\r\n        let cy = 0;\r\n        let deg = 0;\r\n\r\n        switch (orientation) {\r\n          case 3:\r\n            cx = -image.width;\r\n            cy = -image.height;\r\n            deg = 180;\r\n            break;\r\n          case 6:\r\n            cw = image.height;\r\n            ch = image.width;\r\n            cy = -image.height;\r\n            deg = 90;\r\n            break;\r\n          case 8:\r\n            cw = image.height;\r\n            ch = image.width;\r\n            cx = -image.width;\r\n            deg = 270;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n\r\n        canvas.width = cw;\r\n        canvas.height = ch;\r\n        ctx.rotate((deg * Math.PI) / 180);\r\n        ctx.drawImage(image, cx, cy);\r\n        img = document.createElement('img');\r\n        img.width = cw;\r\n        img.height = ch;\r\n        img.addEventListener('load', () => {\r\n          callback(img);\r\n        });\r\n        img.src = canvas.toDataURL('image/png');\r\n      } else {\r\n        img = image;\r\n        callback(img);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ImageCropperComponent } from './image-cropper.component';\n\n@NgModule({\n  declarations: [ImageCropperComponent],\n  exports: [ImageCropperComponent],\n  imports: [CommonModule]\n})\nexport class ImageCropperModule {}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageCropperService {\n  constructor() {}\n}\n","// looks like this CropService is never used\r\nexport class CropService {\r\n  public canvas: HTMLCanvasElement;\r\n  public ctx: CanvasRenderingContext2D;\r\n\r\n  public init(canvas: HTMLCanvasElement) {\r\n    this.canvas = canvas;\r\n    this.ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\r\n  }\r\n}\r\n"]}