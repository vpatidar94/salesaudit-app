import { Point } from './point';
export class PointPool {
    constructor(initialSize = 1) {
        let prev = (this.firstAvailable = new Point());
        for (let i = 1; i < initialSize; i++) {
            const p = new Point();
            prev.next = p;
            prev = p;
        }
    }
    get instance() {
        return this;
    }
    borrow(x, y) {
        if (this.firstAvailable == null) {
            throw new Error('Pool exhausted');
        }
        this.borrowed++;
        const p = this.firstAvailable;
        this.firstAvailable = p.next;
        p.x = x;
        p.y = y;
        return p;
    }
    returnPoint(p) {
        this.borrowed--;
        p.x = 0;
        p.y = 0;
        p.next = this.firstAvailable;
        this.firstAvailable = p;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9pbnRQb29sLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LWltZy1jcm9wcGVyLyIsInNvdXJjZXMiOlsibGliL2ltYWdlLWNyb3BwZXIvbW9kZWwvcG9pbnRQb29sLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFFaEMsTUFBTSxPQUFPLFNBQVM7SUFJcEIsWUFBWSxjQUFzQixDQUFDO1FBQ2pDLElBQUksSUFBSSxHQUFVLENBQUMsSUFBSSxDQUFDLGNBQWMsR0FBRyxJQUFJLEtBQUssRUFBRSxDQUFDLENBQUM7UUFFdEQsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFdBQVcsRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUNwQyxNQUFNLENBQUMsR0FBRyxJQUFJLEtBQUssRUFBRSxDQUFDO1lBQ3RCLElBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDO1lBQ2QsSUFBSSxHQUFHLENBQUMsQ0FBQztTQUNWO0lBQ0gsQ0FBQztJQUVELElBQUksUUFBUTtRQUNWLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVNLE1BQU0sQ0FBQyxDQUFTLEVBQUUsQ0FBUztRQUNoQyxJQUFJLElBQUksQ0FBQyxjQUFjLElBQUksSUFBSSxFQUFFO1lBQy9CLE1BQU0sSUFBSSxLQUFLLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztTQUNuQztRQUNELElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUNoQixNQUFNLENBQUMsR0FBVSxJQUFJLENBQUMsY0FBYyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxjQUFjLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQztRQUM3QixDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNSLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ1IsT0FBTyxDQUFDLENBQUM7SUFDWCxDQUFDO0lBRU0sV0FBVyxDQUFDLENBQVE7UUFDekIsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1FBQ2hCLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ1IsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDUixDQUFDLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUM7UUFDN0IsSUFBSSxDQUFDLGNBQWMsR0FBRyxDQUFDLENBQUM7SUFDMUIsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUG9pbnQgfSBmcm9tICcuL3BvaW50JztcclxuXHJcbmV4cG9ydCBjbGFzcyBQb2ludFBvb2wge1xyXG4gIHByaXZhdGUgYm9ycm93ZWQ6IG51bWJlcjtcclxuICBwcml2YXRlIGZpcnN0QXZhaWxhYmxlOiBQb2ludDtcclxuXHJcbiAgY29uc3RydWN0b3IoaW5pdGlhbFNpemU6IG51bWJlciA9IDEpIHtcclxuICAgIGxldCBwcmV2OiBQb2ludCA9ICh0aGlzLmZpcnN0QXZhaWxhYmxlID0gbmV3IFBvaW50KCkpO1xyXG5cclxuICAgIGZvciAobGV0IGkgPSAxOyBpIDwgaW5pdGlhbFNpemU7IGkrKykge1xyXG4gICAgICBjb25zdCBwID0gbmV3IFBvaW50KCk7XHJcbiAgICAgIHByZXYubmV4dCA9IHA7XHJcbiAgICAgIHByZXYgPSBwO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZ2V0IGluc3RhbmNlKCk6IFBvaW50UG9vbCB7XHJcbiAgICByZXR1cm4gdGhpcztcclxuICB9XHJcblxyXG4gIHB1YmxpYyBib3Jyb3coeDogbnVtYmVyLCB5OiBudW1iZXIpOiBQb2ludCB7XHJcbiAgICBpZiAodGhpcy5maXJzdEF2YWlsYWJsZSA9PSBudWxsKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcignUG9vbCBleGhhdXN0ZWQnKTtcclxuICAgIH1cclxuICAgIHRoaXMuYm9ycm93ZWQrKztcclxuICAgIGNvbnN0IHA6IFBvaW50ID0gdGhpcy5maXJzdEF2YWlsYWJsZTtcclxuICAgIHRoaXMuZmlyc3RBdmFpbGFibGUgPSBwLm5leHQ7XHJcbiAgICBwLnggPSB4O1xyXG4gICAgcC55ID0geTtcclxuICAgIHJldHVybiBwO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIHJldHVyblBvaW50KHA6IFBvaW50KSB7XHJcbiAgICB0aGlzLmJvcnJvd2VkLS07XHJcbiAgICBwLnggPSAwO1xyXG4gICAgcC55ID0gMDtcclxuICAgIHAubmV4dCA9IHRoaXMuZmlyc3RBdmFpbGFibGU7XHJcbiAgICB0aGlzLmZpcnN0QXZhaWxhYmxlID0gcDtcclxuICB9XHJcbn1cclxuIl19